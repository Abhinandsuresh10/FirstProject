<%- include('./header.ejs') %>

<div class="ipo-wrapper">
    <div class="ipo-container">
        <p class="ipo-instruction">Please enter the OTP sent to your email</p>
        <p class="ipo-error" id="error-message" style="display: none;"></p>
        <form id="otp-form" class="ipo-form">
            <div class="ipo-otp-inputs">
                <input type="text" maxlength="1" class="ipo-otp-input" name="otp[]" required>
                <input type="text" maxlength="1" class="ipo-otp-input" name="otp[]" required>
                <input type="text" maxlength="1" class="ipo-otp-input" name="otp[]" required>
                <input type="text" maxlength="1" class="ipo-otp-input" name="otp[]" required>
                <input type="text" maxlength="1" class="ipo-otp-input" name="otp[]" required>
                <input type="text" maxlength="1" class="ipo-otp-input" name="otp[]" required>
            </div>
            <button type="submit" class="ipo-button">VERIFY OTP</button>
        </form>
        <p class="ipo-resend-text">
            If not received code? <span id="resend-timer">30</span>
            <a href="#" id="resend-link" class="ipo-resend-link disabled" style="display:none;">Resend OTP</a>
        </p>
    </div>
</div>
<script>
    const form = document.getElementById('otp-form');
    const errorMessage = document.getElementById('error-message');

    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = new FormData(form); // Serialize form data including OTP values
        const otpDigits = [];
        
        // Extract OTP digits from FormData
        formData.getAll('otp[]').forEach(digit => {
            otpDigits.push(digit);
        });

        const otpString = otpDigits.join('');
        const options = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json' // Set headers if needed
            },
            body: JSON.stringify({ otp: otpString })// Include formData in the request body
        };

        try {
            const response = await fetch('/verify-otp', options); // Send POST request to /verify-otp
            const data = await response.json(); // Parse response JSON

            if (response.ok) {
                // Handle successful verification (redirect or message)
                window.location.href = '/home'; // Redirect to home page after successful verification
            } else {
                // Display error message
                errorMessage.textContent = data.message;
                errorMessage.style.display = 'block';
            }
        } catch (error) {
            console.error('Error:', error);
            errorMessage.textContent = 'Failed to verify OTP. Please try again.';
            errorMessage.style.display = 'block';
        } finally {
            // Reset form inputs
            form.reset();
        }
    });



</script>

<script>
    document.querySelectorAll('.ipo-otp-input').forEach((input, index, inputs) => {
        input.addEventListener('input', () => {
            if (input.value.length === 1 && index < inputs.length - 1) {
                inputs[index + 1].focus();
            }
        });

        input.addEventListener('keydown', (e) => {
            if (e.key === 'Backspace' && index > 0 && input.value.length === 0) {
                inputs[index - 1].focus();
            }
        });
    });

    // Countdown timer for resend OTP link
    let countdown = 30;
    const timerElement = document.getElementById('resend-timer');
    const resendLink = document.getElementById('resend-link');

    const interval = setInterval(() => {
        countdown--;
        timerElement.textContent = countdown;

        if (countdown <= 0) {
            clearInterval(interval);
            timerElement.style.display = 'none';
            resendLink.style.display = 'inline';
            resendLink.classList.remove('disabled');
            resendLink.addEventListener('click', resendOtp);
        }
    }, 1000);

    function resendOtp(event) {
        event.preventDefault();

        fetch('/resend-otp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.message) {
                alert(data.message);
            
                countdown = 30;
                timerElement.textContent = countdown;
                timerElement.style.display = 'inline';
                resendLink.style.display = 'none';
                resendLink.classList.add('disabled');
                resendLink.removeEventListener('click', resendOtp);
                const newInterval = setInterval(() => {
                    countdown--;
                    timerElement.textContent = countdown;

                    if (countdown <= 0) {
                        clearInterval(newInterval);
                        timerElement.style.display = 'none';
                        resendLink.style.display = 'inline';
                        resendLink.classList.remove('disabled');
                        resendLink.addEventListener('click', resendOtp);
                    }
                }, 1000);
            }
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }
</script>
<%- include('./footer.ejs') %>
