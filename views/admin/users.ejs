


<%- include('./adminHeader.ejs') %>

<style>
  .pagination {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-top: 20px;
      margin-left: -45%;
  }
  .pagination-link {
      margin: 0 5px;
      padding: 8px 16px;
      text-decoration: none;
      color: #ffffff;
      border: 1px solid #ddd;
      border-radius: 4px;
  }
  .pagination-link:hover {
      background-color: #000000;
      color: #ffffff;
  }
  .pagination-link.active {
      font-weight: bold;
      background-color: #000000;
      color: #fff;
  }
</style>


<div class="col-lg-12 grid-margin stretch-card" style="width: 80%;">
    <div class="card">
      <div class="card-body">
        <h4 class="card-title">Striped Table</h4>
        <br>
        </p>
        <div class="table-responsive">
          <table class="table table-striped" >
            <thead>
              <tr>
                <th>No</th>
                <th> Name</th>
                <th> email </th>
                <th> Status </th>
              </tr>
            </thead>

            <tbody>
   
                <% for(let i=0;i<users.length;i++){%>

              <tr>
                <td style="color: aliceblue;"> <%= i+1%></td>
                <td style="color: aliceblue;"> <%=users[i].name%> </td>
                <td style="color: aliceblue;"> <%=users[i].email%> </td>
                <td style="color: aliceblue;"> 
                  <% if (users[i].is_blocked) { %> 
                    <button onclick="confirmUnblock('<%= users[i]._id %>')" class="btn btn-danger">Unblock</button>
                  <% } else { %>
                    <button onclick="confirmBlock('<%= users[i]._id %>')" class="btn btn-primary" style="width: 82px;">Block</button>
                  <% } %>
                </td>
                
              </tr>
            <% } %>
            </tbody>
          </table>
        </div>
        <div class="pagination">
          <% if (currentPage > 1) { %>
          <a href="?page=<%= currentPage - 1 %>" class="pagination-link"> < </a>
          <% } %>
          <% for (let i = 1; i <= totalPages; i++) { %>
          <a href="?page=<%= i %>" class="pagination-link <%= currentPage === i ? 'active' : '' %>"><%= i %></a>
          <% } %>
          <% if (currentPage < totalPages) { %>
          <a href="?page=<%= currentPage + 1 %>" class="pagination-link"> > </a>
          <% } %>
      </div>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function confirmBlock(userId) {
    Swal.fire({
      text: "You are about to block this user.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "Yes, block!",
      cancelButtonText: "Cancel",
      reverseButtons: true
    }).then((result) => {
      if (result.isConfirmed) {
        
        fetch('/admin/block', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ user_id: userId })
        })
        .then(response => {
          if (response.ok) {
            return response.json();
          }
          throw new Error('Network response was not ok.');
        })
        .then(data => {
       
          Swal.fire({
            text: "User has been blocked.",
            icon: "success"
          }).then(() => {
            location.reload(); 
          });
        })
        .catch(error => {
          console.error('Error:', error);
          swalWithBootstrapButtons.fire({
            title: "Error",
            text: "Failed to block user.",
            icon: "error"
          });
        });
      } else if (
        result.dismiss === Swal.DismissReason.cancel
      ) {
        swalWithBootstrapButtons.fire({
          title: "Cancelled",
          text: "User was not blocked.",
          icon: "error"
        });
      }
    });
  }

  function confirmUnblock(userId) {
    Swal.fire({
      text: "You are about to unblock this user.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "Yes, unblock!",
      cancelButtonText: "Cancel",
      reverseButtons: true
    }).then((result) => {
      if (result.isConfirmed) {
      
        fetch('/admin/unblock', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ user_id: userId })
        })
        .then(response => {
          if (response.ok) {
            return response.json();
          }
          throw new Error('Network response was not ok.');
        })
        .then(data => {
        
          Swal.fire({
            text: "User has been unblocked.",
            icon: "success"
          }).then(() => {
            location.reload(); 
          });
        })
        .catch(error => {
          console.error('Error:', error);
          swalWithBootstrapButtons.fire({
            title: "Error",
            text: "Failed to unblock user.",
            icon: "error"
          });
        });
      } else if (
        result.dismiss === Swal.DismissReason.cancel
      ) {
        swalWithBootstrapButtons.fire({
          title: "Cancelled",
          text: "User was not unblocked.",
          icon: "error"
        });
      }
    });
  }
</script>


<%- include('./adminFooter.ejs') %>

