<%- include('./adminHeader.ejs') %>
<style>
    .pagination {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 10px;
    border-radius: 8px;
}

.pagination-link {
    color: #fff;
    padding: 10px 15px;
    margin: 5px;
    border-radius: 4px;
    text-decoration: none;
    background-color: #444; 
    transition: background-color 0.3s ease;
}

.pagination-link:hover {
    background-color: #555; 
}

.pagination-link.active {
    background-color: #000000; 
    color: #fff;
}

@media (max-width: 600px) {
    .pagination {
        flex-direction: column;
        align-items: center;
    }
    .pagination-link {
        margin: 5px 0;
    }
}

</style>

<div class="col-lg-6 grid-margin stretch-card" style="width: 90%;">
    <div class="card">
        <div class="card-body">
            <div class="filters mb-3">
                <form action="/admin/FilterSalesReport" method="GET">
                    <div class="form-group" style="width: 23%;">
                        <label for="salesPeriod">Sales Period</label>
                        <select id="salesPeriod" name="salesPeriod" class="form-control" style="color: aliceblue;">
                            <option value="Select">Select</option>
                            <option value="Daily">Daily</option>
                            <option value="weekly">Weekly</option>
                            <option value="monthly">Monthly</option>
                            <option value="yearly">Yearly</option>
                        </select>
                    </div>
                    
                    <div class="form-group row" style="width: 100%;">
                        <div class="col-md-6 d-flex align-items-center">
                            <div class="form-group mr-3">
                                <label for="startDate">Start Date</label>
                                <input type="date" id="startDate" name="startDate" class="form-control">
                            </div>&nbsp;
                            <div class="form-group mr-3">
                                <label for="endDate">End Date</label>
                                <input type="date" id="endDate" name="endDate" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-6 d-flex justify-content-end align-items-center">
                            <a href="#" class="btn btn-secondary ml-2" id="downloadPdfBtn">Download PDF</a>&nbsp;
                            <a href="#" class="btn btn-secondary ml-2" id="downloadExcelBtn">Download Excel</a>
                        </div>
                    </div>
                
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Apply Filters</button>
                    </div>
                </form>
                
            </div>
            <div class="table-responsive">
                <table class="table">
                  <thead>
                    <tr>
                      <th>Date</th>
                      <th style="width: 5%;">Products</th>
                      <th>Total Quantity</th>
                      <th>Customer Name</th>
                      <th>Payment Method</th>
                      <th>Total Amount</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% if (sales.length > 0) { %>
                      <% sales.forEach(sale => { %>
                        <tr>
                          <td><%= new Date(sale.createdAt).toLocaleDateString() %></td>
                          <td style="width: 5%;">
                            <% sale.orderItems.forEach((item, index) => { %>
                              <%= item.product.name %> x <%= item.quantity %>
                              <%= index < sale.orderItems.length - 1 ? ', ' : '' %>
                            <% }) %>
                          </td>
                          <td>
                            <% 
                              let totalQuantity = 0;
                              sale.orderItems.forEach(item => {
                                totalQuantity += item.quantity;
                              });
                            %>
                            &nbsp;&nbsp;&nbsp;
                            &nbsp;&nbsp;&nbsp;<%= totalQuantity %>
                          </td>
                          <td><%= sale.user.name %></td>
                          <td><%= sale.paymentMethod %></td>
                          <td><%= sale.amount.toFixed(2) %></td>
                        </tr>
                      <% }) %>
                    <% } else { %>
                      <tr>
                        <td colspan="6" style="text-align: center; color: brown;">No data</td>
                      </tr>
                    <% } %>
                  </tbody>
                  
                <% if (sales.length > 0) { %>
                    <br> <td></td><td></td><td></td><td></td><td></td>
                       <td class="grand-total-label">Grand Total:
                        &nbsp;<%= grandTotalAmount.toFixed(2) %> 
                       </td>
                    
                   <% } %>
                </table>
             
              </div>
              <div class="table-responsive">
              <table class="table">
                <thead >
                  <tr>
                    <th>Total Sales count</th>
                    <th>Total DIscount</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>&nbsp;&nbsp;&nbsp; <%= totalOrders %></td>
                    <td>&nbsp;&nbsp;&nbsp;<%= totalDiscount %></td>
                  </tr>
                </tbody>
              </table>
            </div>
              
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>&limit=<%= limit %>" class="pagination-link"><</a>
                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <a href="?page=<%= i %>&limit=<%= limit %>" class="pagination-link <%= currentPage === i ? 'active' : '' %>"><%= i %></a>
                <% } %>
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>&limit=<%= limit %>" class="pagination-link">></a>
                <% } %>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>
<script>
  document.getElementById("downloadPdfBtn").addEventListener("click", function () {
    let doc = new window.jspdf.jsPDF();
    let pageCenter = doc.internal.pageSize.getWidth() / 2;

    doc.setFontSize(25);
    doc.text("G BAGS.", pageCenter, 10, { align: 'center' });
    doc.setFontSize(15);
    doc.text("Sales Report", pageCenter, 20, { align: 'center' });

    let tables = document.querySelectorAll(".table");

    let startY = 35;

    tables.forEach((table, index) => {
        if (index > 0) {
            startY += 10; 
        }

        doc.autoTable({ html: table, startY: startY });
        startY = doc.lastAutoTable.finalY + 10; 
    });

    doc.save("SalesReport.pdf");
});

document.getElementById("downloadExcelBtn").addEventListener("click", function () {
    let workbook = XLSX.utils.book_new();

    let tables = document.querySelectorAll(".table");

    tables.forEach((table, index) => {
        let worksheet = XLSX.utils.table_to_sheet(table);

        let sheetName = "Sales Report " + (index + 1);
        XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);

        let range = XLSX.utils.decode_range(worksheet['!ref']);
        for (let C = range.s.c; C <= range.e.c; ++C) {
            let max_width = 0;
            for (let R = range.s.r; R <= range.e.r; ++R) {
                let cell_address = { c: C, r: R };
                let cell_ref = XLSX.utils.encode_cell(cell_address);
                if (!worksheet[cell_ref]) continue;
                let cell_width = XLSX.SSF.format(cell_address, worksheet[cell_ref].v).length;
                max_width = Math.max(max_width, cell_width);
            }
            worksheet['!cols'] = worksheet['!cols'] || [];
            worksheet['!cols'][C] = { wch: max_width + 1 };
        }
    });

    XLSX.writeFile(workbook, "Sales Report.xlsx", { bookSST: true, type: 'binary' });
});
</script>

<%- include('./adminFooter.ejs') %>
