<%- include('./adminHeader.ejs') %>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">


<div class="col-lg-6 grid-margin stretch-card" style="width: 100%; table-layout: fixed; ">
    <div class="card">
      <div class="card-body">
       
        <p class="card-description">  <code>.</code>
        </p>
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#addCouponModal">
            Add Coupon
          </button><br><br>
        <div class="table-responsive">
          <table class="table table">
            <thead>
              <tr>
                <th style="width: 10%;">Code</th>
                <th style="width: 10%;">Discount</th>
                <th style="width: 15%;">ExpiryDate</th>
                <th style="width: 10%;">MinPurchaseAmount</th>
                <th style="width: 15%;">Action</th>
              </tr>
            </thead>
            <tbody>
              <% coupons.forEach(coupon => { %>
                <tr>
                  <td><%= coupon.code %></td>
                  <td ><%= coupon.discountValue %> %</td>
                  <td class="text-danger"><%= new Date(coupon.expiryDate).toLocaleDateString() %></td>
                  <td>â‚¹ <%= coupon.minPurchaseAmount %>/-</td>
                  <td>
                    <button type="button" class="btn btn-warning edit-coupon-button" data-toggle="modal" data-target="#editCouponModal-<%= coupon._id %>">Edit</button>
                   
                    <button type="button" class="btn btn-danger delete-coupon-button" data-id="<%= coupon._id %>">Delete</button>
                  </td>
                </tr>

                <!-- edit modal -->

               <div class="modal fade" id="editCouponModal-<%= coupon._id %>" style="margin-top: -5%;">
               <div class="modal-dialog modal-dialog-centered">
               <div class="modal-content">
  
               <!-- Modal Header -->
               <div class="modal-header" >
               <h4 class="modal-title">Edit Coupon</h4>
               <button type="button" class="close" data-dismiss="modal">&times;</button>
               </div>
    
               <!-- Modal Body -->
           <div class="modal-body" >
               <form id="editCouponModal-<%= coupon._id %>">
                <input type="hidden" id="couponId-<%= coupon._id %>" name="couponId" value="<%= coupon._id %>">
        
           <div class="form-group">
               <label for="code">Code:</label>
               <input type="text" class="form-control" id="code" name="code" style="color: aliceblue;" value="<%= coupon  .code %>" required>
               <small id="codeError" class="text-danger d-none">Code must be at least 4 characters long.</small>
         </div>
         <div class="form-group">
               <label for="discountValue">Discount Value:</label>
               <input type="number" class="form-control" id="discountValue" name="discountValue" style="color: aliceblue;" value="<%= coupon.discountValue %>" required>
               <small id="DiscountError" class="text-danger d-none">Discount should be in 1 to 100.</small>
         </div>
         <% 
         const formatDate = (date) => {
            const d = new Date(date);
              let month = '' + (d.getMonth() + 1);
            let day = '' + d.getDate();
         const year = d.getFullYear();

           if (month.length < 2) month = '0' + month;
              if (day.length < 2) day = '0' + day;

                  return [year, month, day].join('-');
                };

             const formattedExpiryDate = formatDate(coupon.expiryDate);
                      %>
         <div class="form-group">
               <label for="expiryDate">Expiry Date:</label>
               <input type="date" class="form-control" id="expiryDate" name="expiryDate" style="color: aliceblue;" value="<%= formattedExpiryDate %>" required>
         </div>
         <div class="form-group">
               <label for="minPurchaseAmount">Minimum Purchase Amount:</label>
               <input type="number" class="form-control" id="minPurchaseAmount" style="color: aliceblue;" value="<%= coupon.minPurchaseAmount %>" name="minPurchaseAmount">
               <small id="minPurchaseError" class="text-danger d-none">Minimum purchase amount must be at least 1000.</small>
        </div>
        <div class="form-group">
               <label for="usageLimit">Usage Limit:</label>
               <input type="number" class="form-control" id="usageLimit" style="color: aliceblue;" value="<%= coupon.usageLimit %>" name="usageLimit">
               <small id="usageLimitError" class="text-danger d-none">Usage limit must be greater than 0.</small>
        </div>
               <button type="submit" class="btn btn-primary">Submit</button>
               </form>
        </div>
    
        </div>
        </div>
        </div>
              <% }); %>
                </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

 <!-- The Modal -->
<div class="modal fade" id="addCouponModal" style="margin-top: -5%;">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
      
        <!-- Modal Header -->
        <div class="modal-header" >
          <h4 class="modal-title">Add Coupon</h4>
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        
        <!-- Modal Body -->
        <div class="modal-body" >
          <form id="addCouponForm">
            <div class="form-group">
              <label for="code">Code:</label>
              <input type="text" class="form-control" id="codes" name="code" style="color: aliceblue;" required>
              <small id="codeErrors" class="text-danger d-none">Code must be at least 4 characters long.</small>
            </div>
            <div class="form-group">
              <label for="discountValue">Discount Value:</label>
              <input type="number" class="form-control" id="discountValues" name="discountValue" style="color: aliceblue;" required>
              <small id="DiscountErrors" class="text-danger d-none">Discount should be in 1 to 100.</small>
            </div>
            <div class="form-group">
              <label for="expiryDate">Expiry Date:</label>
              <input type="date" class="form-control" id="expiryDates" name="expiryDate" style="color: aliceblue;" required>
            </div>
            <div class="form-group">
              <label for="minPurchaseAmount">Minimum Purchase Amount:</label>
              <input type="number" class="form-control" id="minPurchaseAmounts" style="color: aliceblue;" name="minPurchaseAmount">
              <small id="minPurchaseErrors" class="text-danger d-none">Minimum purchase amount must be at least 1000.</small>
            </div>
            <div class="form-group">
              <label for="usageLimit">Usage Limit:</label>
              <input type="number" class="form-control" id="usageLimits" style="color: aliceblue;" name="usageLimit">
              <small id="usageLimitErrors" class="text-danger d-none">Usage limit must be greater than 0.</small>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
          </form>
        </div>
        
      </div>
    </div>
  </div>



  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.js"></script>


  <script>
    document.getElementById('addCouponForm').addEventListener('submit', async function (event) {
      event.preventDefault();
      console.log('first error')
      const codeInput = document.getElementById('codes');
      const minPurchaseAmountInput = document.getElementById('minPurchaseAmounts');
      const usageLimitInput = document.getElementById('usageLimits');
      const codeError = document.getElementById('codeErrors');
      const minPurchaseError = document.getElementById('minPurchaseErrors');
      const usageLimitError = document.getElementById('usageLimitErrors');
      const discountInput = document.getElementById('discountValues')
      const discountError = document.getElementById('DiscountErrors');
      let isValid = true;
      
      if (codeInput.value.length < 4) {
        codeError.classList.remove('d-none');
        isValid = false;
      } else {
        codeError.classList.add('d-none');
      }
    
      if (parseFloat(minPurchaseAmountInput.value) < 500) {
        minPurchaseError.classList.remove('d-none');
        isValid = false;
      } else {
        minPurchaseError.classList.add('d-none');
      }
    
      if (parseFloat(usageLimitInput.value) <= 0) {
        usageLimitError.classList.remove('d-none');
        isValid = false;
      } else {
        usageLimitError.classList.add('d-none');
      }

    if(parseFloat(discountInput.value) < 1 || parseFloat(discountInput.value) > 100){
      discountError.classList.remove('d-none');
      isValid = false;
    } else {
      discountError.classList.add('d-none');
    }
    
      if (!isValid) {
        return;
      }
    
      const code = codeInput.value;
      const discountValue = document.getElementById('discountValues').value;
      const expiryDate = document.getElementById('expiryDates').value;
      const minPurchaseAmount = minPurchaseAmountInput.value;
      const usageLimit = usageLimitInput.value;
    
      try {
        const response = await fetch('/admin/addCoupon', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            code,
            discountValue,
            expiryDate,
            minPurchaseAmount,
            usageLimit
          })
        });
    
        const data = await response.json();
    
        if (response.ok) {
          Toastify({
            text: "Coupon added successfully",
            duration: 2000,
            backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
          }).showToast();
          setTimeout(() => location.reload(), 2000);
        } else {
          Toastify({
            text: data.message || 'Error adding coupon',
            duration: 3000,
            backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
          }).showToast();
        }
      } catch (error) {
        console.error('Error:', error);
        Toastify({
          text: 'An error occurred while adding the coupon.',
          duration: 3000,
          backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
        }).showToast();
      }
    });
    </script>

<script>
  document.getElementById('editCouponModal').addEventListener('submit', async function (event) {
    event.preventDefault();

    
    const codeInput = document.getElementById('code');
    const minPurchaseAmountInput = document.getElementById('minPurchaseAmount');
    const usageLimitInput = document.getElementById('usageLimit');
    const codeError = document.getElementById('codeError');
    const minPurchaseError = document.getElementById('minPurchaseError');
    const usageLimitError = document.getElementById('usageLimitError');
    const discountInput = document.getElementById('discountValue')
    const discountError = document.getElementById('DiscountError');
    let isValid = true;
  
    if (codeInput.value.length < 4) {
      codeError.classList.remove('d-none');
      isValid = false;
    } else {
      codeError.classList.add('d-none');
    }
  
    if (parseFloat(minPurchaseAmountInput.value) < 500) {
      minPurchaseError.classList.remove('d-none');
      isValid = false;
    } else {
      minPurchaseError.classList.add('d-none');
    }
  
    if (parseFloat(usageLimitInput.value) <= 0) {
      usageLimitError.classList.remove('d-none');
      isValid = false;
    } else {
      usageLimitError.classList.add('d-none');
    }

  if(parseFloat(discountInput.value) < 1 || parseFloat(discountInput.value) > 100){
    discountError.classList.remove('d-none');
    isValid = false;
  } else {
    discountError.classList.add('d-none');
  }
  
    if (!isValid) {
      return;
    }
    const couponId = document.getElementById('couponId').value;
    const code = codeInput.value;
    const discountValue = document.getElementById('discountValue').value;
    const expiryDate = document.getElementById('expiryDate').value;
    const minPurchaseAmount = minPurchaseAmountInput.value;
    const usageLimit = usageLimitInput.value;
     
    try {
      const response = await fetch(`/admin/editCoupon/${couponId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          code,
          discountValue,
          expiryDate,
          minPurchaseAmount,
          usageLimit
        })
      });
  
      const data = await response.json();
  
      if (response.ok) {
        Toastify({
          text: "Coupon updated successfully",
          duration: 2000,
          backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
        }).showToast();
        setTimeout(() => location.reload(), 2000);
      } else {
        Toastify({
          text: data.message || 'Error adding coupon',
          duration: 3000,
          backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
        }).showToast();
      }
    } catch (error) {
      console.error('Error:', error);
      Toastify({
        text: 'An error occurred while updating the coupon.',
        duration: 3000,
        backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
      }).showToast();
    }
  });
  </script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>


<script>
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.delete-coupon-button').forEach(button => {
        button.addEventListener('click', async function () {
          const couponId = this.getAttribute('data-id');
          
          const result = await Swal.fire({
            text: "ðŸ›‘Are you sure you want to delete this ?!",
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
          });
  
          if (result.isConfirmed) {
            try {
              const response = await fetch(`/admin/deleteCoupon/${couponId}`, {
                method: 'DELETE'
              });
  
              if (response.ok) {
                Swal.fire(
                  'Deleted!',
                  ' âœ… Your coupon has been deleted.',
                ).then(() => {
                  location.reload();
                });
              } else {
                Swal.fire(
                  'Error!',
                  'There was a problem deleting the coupon.',
                  'error'
                );
              }
            } catch (error) {
              console.error('Error:', error);
              Swal.fire(
                'Error!',
                'An error occurred while deleting the coupon.',
                'error'
              );
            }
          }
        });
      });
    });
  </script>
  
<%- include('./adminFooter.ejs') %>