<%- include('./adminHeader.ejs') %>

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Striped Table</h4>
            <p class="card-description">Add class <code>.table-striped</code></p>

            <div class="table-responsive">
                <div style="margin-left: 50%;">
                    <button type="button" class="btn btn-outline-danger " data-bs-toggle="modal" data-bs-target="#addBrandModal">Add Brand</button>
                    <button type="button" class="btn btn-outline-danger " > <a href="/admin/deletedBrand" style="text-decoration: none;color: rgb(188, 188, 188);">Restore Brand</a></button>
                </div>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>Brand name</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% for(let i=0;i<brands.length;i++){ %>
                        <tr>
                            <td style="color: aliceblue;"><%= i+1 %></td>
                            <td style="color: aliceblue;"><%= brands[i].name %></td>
                            <td>
                                <button type="button" class="btn " data-bs-toggle="modal" data-bs-target="#editBrandModal" style="width: 80px;background-color: rgb(13, 73, 152);">EDIT</button><br><br>
  
                                <!-- Edit Brand Modal -->
                                <div class="modal fade" id="editBrandModal" tabindex="-1" aria-labelledby="editBrandModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="editBrandModalLabel">Edit Brand</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <form method="post" action="/admin/editBrand">
                                                    <div class="mb-3">
                                                        <label for="brandName" class="form-label">Brand Name</label>
                                                        <input type="text" class="form-control" style="color: aliceblue;" id="brandName" name="brandName" placeholder="Enter brand name" value="<%= brands[i].name %>">
                                                        <input type="hidden" name="brandId" value="<%= brands[i]._id %>">
                                                    </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                <button type="submit" class="btn btn-primary">Save changes</button>
                                            </div>
                                        </form>
                                        </div>
                                    </div>
                                </div>
                                <!-- Edit Brand Modal ends -->

                                <button type="button" class="btn btn-danger delete-btn" data-id="<%= brands[i]._id %>">DELETE</button>
                            </td>
                            <td></td>
                        </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add Brand Modal -->
<div class="modal fade" id="addBrandModal" tabindex="-1" aria-labelledby="addBrandModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBrandModalLabel">Add Brand</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" action="/admin/brand">
                    <div class="mb-3">
                        <label for="brandName" class="form-label">Brand Name</label>
                        <input type="text" class="form-control" style="color: aliceblue;" id="brandName" name="brandName" placeholder="Enter brand name">
                    </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save changes</button>
            </div>
        </form>
        </div>
    </div>
</div>

<script>
    document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', function() {
            const brandId = this.getAttribute('data-id');
            Swal.fire({
                title: 'Are you sure?',
                text: "Are you sure you want to delete this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/delete-brand?id=${brandId}`, {
                        method: 'POST'
                    })
                    .then(response => {
                        if (response.ok) {
                            Swal.fire(
                                'Deleted!',
                                'The brand has been deleted.',
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                'There was an error deleting the brand.',
                                'error'
                            );
                        }
                    })
                    .catch(error => {
                        Swal.fire(
                            'Error!',
                            'There was an error deleting the brand.',
                            'error'
                        );
                    });
                }
            });
        });
    });
</script>

<%- include('./adminFooter.ejs') %>


old admin router 

// const express = require('express');
// const adminController = require('../controllers/adminControllers');
// const adminUserController = require('../controllers/adminUserController');
// const adminCategoryController = require('../controllers/adminCategoryController');
// const adminProductsController = require('../controllers/adminProductsController');
// const adminAuth = require('../middilewares/adminAuth')
// const session = require('express-session');
// const config = require('../config/config');

// const adminRoute = express();

// adminRoute.use(session({
//     secret: config.sessionSecret,
//     saveUninitialized: false,
//     resave: false,
//     cookie: { secure: false }
// }));

// const multer = require('multer');
// const path = require('path');

// adminRoute.use(express.static('public'));

// const storage = multer.diskStorage({
//     destination: (req, file, cb) => {
//         cb(null, path.join(__dirname, '../public/productImages'));
//     },
//     filename: (req, file, cb) => {
//         const name = Date.now() + '-' + file.originalname;
//         cb(null, name);
//     }
// });

// const upload = multer({ storage: storage });

// const bodyParser = require('body-parser');
// adminRoute.use(bodyParser.json());
// adminRoute.use(bodyParser.urlencoded({ extended: true }));

// adminRoute.set('view engine', 'ejs');
// adminRoute.set('views', './views/admin');

// adminRoute.get('/', adminController.adminLogin);
// adminRoute.post('/login', adminController.adminVerifyLogin);
// adminRoute.get('/dashboard',adminAuth.isLogin, adminController.dashboardLoad);
// adminRoute.get('/users',adminUserController.userLoad);
// adminRoute.get('/category',adminCategoryController.categoryLoad);

// adminRoute.post('/category',adminCategoryController.addCategory);
// adminRoute.post('/editCategory',adminCategoryController.editCategory);
// adminRoute.post('/delete-category',adminCategoryController.deleteCategory);
// adminRoute.get('/deletedcategory',adminCategoryController.isdeletedCategory);
// adminRoute.get('/recover',adminCategoryController.recoverCategory)

// //user block unblock..
// adminRoute.post('/block',adminUserController.blockUser);
// adminRoute.post('/unblock',adminUserController.unblockUser);

// //products...

// adminRoute.get('/products',adminProductsController.productsLoad);
// adminRoute.get('/addProducts',adminProductsController.addProductsLoad);
// adminRoute.post('/insertProducts',upload.array('image',3),adminProductsController.insertProducts);


// //delete product


// adminRoute.get('/deleteProducts',adminProductsController.deleteProduct);
// adminRoute.get('/deletedProducts',adminProductsController.deletedProductspage);
// adminRoute.get('/recoverProducts',adminProductsController.recoverProduct);


// //edit Product

// adminRoute.get('/editProducts',adminProductsController.editProductLoad);
// adminRoute.post('/insertEditProducts',upload.array('image',3),adminProductsController.editProduct);



// //brands routes into categories

// adminRoute.get('/brands',adminCategoryController.brandsLoad);
// adminRoute.post('/brands',adminCategoryController.addBrand);
// adminRoute.post('/editBrand',adminCategoryController.editBrand);
// adminRoute.post('/delete-brand',adminCategoryController.deleteBrand);
// adminRoute.get('/deletedBrand',adminCategoryController.deletedBrand);
// adminRoute.get('/brandrecover',adminCategoryController.recoverBrands)




// module.exports = adminRoute;




//real code in the product details 



 <section class="ftco-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 mb-5 ftco-animate">
                <div class="zoom-container" >
                    <img src="/static/productImages/<%= product.image[0] %>" class="img-fluid" alt="Product Image" style="height: 700px;width: 800px;">
                    <div class="zoomed-image" ></div>
                </div>
            </div>
            <div class="col-lg-6 product-details pl-md-5 ftco-animate" style="padding-top: 10%;">
                <h3><%=product.name%></h3>
                    <!-- <div class="rating d-flex">
                            <p class="text-left mr-4">
                                <a href="#" class="mr-2">5.0</a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                            </p>
                            <p class="text-left mr-4">
                                <a href="#" class="mr-2" style="color: #000;">100 <span style="color: #bbb;">Rating</span></a>
                            </p>
                            <p class="text-left">
                                <a href="#" class="mr-2" style="color: #000;">500 <span style="color: #bbb;">Sold</span></a>
                            </p>
                        </div> -->
                <p class="price"><span>₹<%=product.price%></span></p>
                <h5><u>Brand</u></h5>
                <p><%=product.brand%></p>
                <h5><u>Details</u></h5>
                <p> <%=product.discription%></p>
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <div class="form-group d-flex">
                  <!-- <div class="select-wrap">
                  <div class="icon"><span class="ion-ios-arrow-down"></span></div>
                  <select name="" id="" class="form-control">
                      <option value="" style="background-color: blue;">Blue</option>
                    <option value="" style="background-color: red;">Red</option>
                    <option value="" style="background-color: #000;">Black</option>
                   
                  </select>
                </div> -->
                <div style="height: 50px;"></div>
                </div>
                        </div>
                        <div class="w-100"></div>
                        <div class="input-group col-md-6 d-flex mb-3" style="width: 35%;">
                 <span class="input-group-btn mr-2">
                    <button type="button" class="quantity-left-minus btn"  data-type="minus" data-field="">
                   <i class="ion-ios-remove"></i>
                    </button>
                    </span>
                 <input type="text" id="quantity" name="quantity" class="form-control input-number" value="1" min="1" max="100">
                 <span class="input-group-btn ml-2">
                    <button type="button" class="quantity-right-plus btn" data-type="plus" data-field="">
                     <i class="ion-ios-add"></i>
                 </button>
                 </span>
              </div>
              <div class="w-100"></div>
              <div class="col-md-12">
                  <% if (product.stock > 0) { %>
                      <p style="color: green;"><span style="color: rgb(0, 0, 0);"><%= product.stock %></span> In stock</p>
                  <% } else { %>
                      <p style="color: red;">Out of stock</p>
                  <% } %>
              </div>
          </div>
          <p><a href="cart.html" class="btn btn-black py-3 px-5">Add to Cart</a></p>
            </div>
        </div>
    </div>
</section>


edit product html


<%- include('./adminHeader.ejs') %>



<div class="col-12 grid-margin stretch-card">
    <div class="card">
      <div class="card-body">
        <h4 class="card-title">Basic form elements</h4>
        <p class="card-description"> Basic form elements </p>
        <form class="forms-sample" method="post" action="/admin/insertEditProducts?pid=<%= product._id %>" enctype="multipart/form-data">
           
          <div class="form-group">
          
            <label for="exampleInputName1">Name</label>
           
            <input type="text" class="form-control" id="exampleInputName1" style="color: rgb(252, 252, 252);width: 85%;" name="name" value="<%= product.name %>" required>
          </div>
          <div class="form-group">
            <label for="exampleSelectCategory">Category</label>
            <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="category" required>
              <option><%= product.category %></option>
              <% for(let i=0;i<categories.length;i++){ %>
              <option ><%=categories[i].name%></option>
              <% } %>
              
             
            </select>
          </div>
          <div class="form-group">
            <label for="exampleSelectCategory">Brands</label>
            <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="brand" required>
              <option><%= product.brand %></option>
              <% for(let i=0;i<brands.length;i++){ %>
              <option ><%=brands[i].name%></option>
              <% } %>
              
             
            </select>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Models</label>
            <input type="text" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="model" value="<%= product.model %>" required>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Material</label>
            <input type="text" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="material" value="<%= product.material %>" required>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Price</label>
            <input type="number" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="price" value="<%= product.price %>" required>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Stock</label>
            <input type="number" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 15%;" name="stock" value="<%= product.stock %>"  required>
          </div>
            <div class="form-group">
              <label for="exampleInputPassword4">Discription</label>
              <textarea class="form-control" id="exampleInputPassword4" name="discription" style ="color: rgb(252, 252, 252);width: 85%; height: 80px;"  required><%= product.discription %></textarea>
            </div>
          
            <h4>Existing images</h4>
            <div id="productImage">
              <% product.image.forEach((item, index) => { %>
                <div style="position: relative; display: inline-block; margin: 10px;">
                  <img src="/static/productImages/<%= item %>" style="width: 100px;height: 100px;background-color: aliceblue;">
                  <span onclick="removeExistingImage(<%= index %>)" style="position: absolute; top: 5px; right: 5px; background: rgba(0, 0, 0, 0.5); color: white; border-radius: 50%; padding: 5px; cursor: pointer;">&times;</span>
                  <input type="hidden" name="existingImages[]" value="<%= item %>">
                </div>
              <% }) %>
            </div>
            <div style="height: 100px; width: 30%;">
              <label for="ocs-productImage" class="ocs-product-label">Upload Image</label>
              <input type="file" id="ocs-productImage" name="image" class="form-control" multiple onchange="previewImages()">
            </div>
    
            <h4>Added images</h4>
            <div id="imagePreview" style="display: flex; flex-wrap: wrap;"></div><br>
         
         
          <button type="submit" class="btn btn-primary me-2">Submit</button>
          <button class="btn btn-dark"><a href="/admin/products" style="text-decoration: none;color: rgb(252, 252, 252);">Cancel</a></button>
        </form>
      </div>
    </div>
  </div>

  <script>
    function previewImages() {
      const preview = document.getElementById('imagePreview');
      preview.innerHTML = '';
      const files = document.getElementById('ocs-productImage').files;
      
      if (files) {
        Array.from(files).forEach((file, index) => {
          const reader = new FileReader();
          
          reader.onload = (e) => {
            const imgContainer = document.createElement('div');
            imgContainer.style.position = 'relative';
            imgContainer.style.margin = '10px';
            
            const img = document.createElement('img');
            img.src = e.target.result;
            img.style.maxWidth = '100px';
            
            const closeButton = document.createElement('span');
            closeButton.innerHTML = '&times;';
            closeButton.style.position = 'absolute';
            closeButton.style.top = '5px';
            closeButton.style.right = '5px';
            closeButton.style.background = 'rgba(0, 0, 0, 0.5)';
            closeButton.style.color = 'white';
            closeButton.style.borderRadius = '50%';
            closeButton.style.padding = '5px';
            closeButton.style.cursor = 'pointer';
            closeButton.setAttribute('data-index', index);
            closeButton.addEventListener('click', () => removeImage(index));
            
            imgContainer.appendChild(img);
            imgContainer.appendChild(closeButton);
            preview.appendChild(imgContainer);
          };
          
          reader.readAsDataURL(file);
        });
      }
    }
    
    function removeImage(index) {
      const input = document.getElementById('ocs-productImage');
      const dataTransfer = new DataTransfer();
      const files = Array.from(input.files);
      
      files.splice(index, 1);
      
      files.forEach(file => {
        dataTransfer.items.add(file);
      });
      
      input.files = dataTransfer.files;
      previewImages();
    }
  
    function removeExistingImage(index) {
      const existingImages = document.getElementsByName('existingImages[]');
      if (existingImages[index]) {
        existingImages[index].value = '';
        const imgContainer = existingImages[index].parentElement;
        imgContainer.style.display = 'none';
      }
    }
  </script>
<%- include('./adminFooter.ejs') %>

add to cart ejs

<%-include ('./header.ejs') %>
<style>
   .input-group-prepend,
    .input-group-append {
        flex: 0 0 auto;
    }

    .quantity-decrease,
    .quantity-increase {
        width: 38px;
        height: 38px;
        font-size: 1rem;
    }

    .quantity {
        min-width: 100px; 
    }
    .thead-primary th {
        background-color: black;
        color: white;
    }



    #snackbar {
        visibility: hidden;
        min-width: 250px;
        margin-left: -125px;
        background: linear-gradient(to right, #00b09b, #96c93d); 
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 16px;
        position: fixed;
        z-index: 1;
        left: 50%;
        bottom: 30px;
    }


#snackbar.show {
  visibility: visible; 
  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
  animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

@-webkit-keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@-webkit-keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}

@keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}
</style>


<section class="ftco-section ftco-cart">
    <div class="container">
        <div class="row">
            <div class="col-md-12 ftco-animate">
                <div class="cart-list" >
                    <table class="table">
                        <thead class="thead-primary text-white" style="background-color: black;">
                            <tr class="text-center">
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th class="text-white">Product</th>
                                <th class="text-white">Price</th>
                                <th class="text-white">Quantity</th>
                                <th class="text-white">Total</th>
                            </tr>
                        </thead>
                        <tbody style="border: 1px solid #b1b0b0;">
                            <% cart.products.forEach(item => { %>
                                <tr class="text-center">
                                    <td class="product-remove">
                                        <a href="#" class="remove-product" data-product-id="<%= item.productId._id %>">
                                            <span class="ion-ios-close"></span></a>
                                    </td>
                                    <td class="image-prod">
                                        <div class="img" style="background-image: url('<%= '/static/productimages/' + item.productId.image[0] %>');"></div>

                                    </td>
                                    <td class="product-name">
                                        <h3><%= item.productId.name %></h3>
                                        <p><%= item.productId.discription %></p>
                                    </td>
                                    <td class="price">$<%= item.productId.price %></td>
                                    <td class="quantity">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <button class="quantity-decrease btn btn-outline-secondary" type="button">-</button>
                                            </div>
                                            <input type="text" name="quantity" class="quantity form-control input-number text-center" value="<%= item.quantity %>" min="1" max="100">
                                            <div class="input-group-append">
                                                <button class="quantity-increase btn btn-outline-secondary" type="button">+</button>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="total">$<%= (item.productId.price * item.quantity).toFixed(2) %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col col-lg-5 col-md-6 mt-5 cart-wrap ftco-animate">
                <div class="cart-total mb-3">
                    <h3>Cart Totals</h3>
                    <p class="d-flex">
                        <span>Subtotal</span>
                        <span>$20.60</span>
                    </p>
                    <p class="d-flex">
                        <span>Delivery</span>
                        <span>$0.00</span>
                    </p>
                    <p class="d-flex">
                        <span>Discount</span>
                        <span>$3.00</span>
                    </p>
                    <hr>
                    <p class="d-flex total-price">
                        <span>Total</span>
                        <span>$17.60</span>
                    </p>
                </div>
                <p class="text-center"><a href="checkout.html" class="btn btn-primary py-3 px-4">Proceed to Checkout</a></p>
            </div>
        </div>
    </div>
</section>

  <footer class="ftco-footer bg-light ftco-section">
    <div class="container">
        <div class="row">
            <div class="mouse">
                      <a href="#" class="mouse-icon">
                          <div class="mouse-wheel"><span class="ion-ios-arrow-up"></span></div>
                      </a>
                  </div>
        </div>
      <div class="row mb-5">
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Winkel</h2>
            <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia.</p>
            <ul class="ftco-footer-social list-unstyled float-md-left float-lft mt-5">
              <li class="ftco-animate"><a href="#"><span class="icon-twitter"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-facebook"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-instagram"></span></a></li>
            </ul>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4 ml-md-5">
            <h2 class="ftco-heading-2">Menu</h2>
            <ul class="list-unstyled">
              <li><a href="#" class="py-2 d-block">Shop</a></li>
              <li><a href="#" class="py-2 d-block">About</a></li>
              <li><a href="#" class="py-2 d-block">Journal</a></li>
              <li><a href="#" class="py-2 d-block">Contact Us</a></li>
            </ul>
          </div>
        </div>
        <div class="col-md-4">
           <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Help</h2>
            <div class="d-flex">
                <ul class="list-unstyled mr-l-5 pr-l-3 mr-4">
                  <li><a href="#" class="py-2 d-block">Shipping Information</a></li>
                  <li><a href="#" class="py-2 d-block">Returns &amp; Exchange</a></li>
                  <li><a href="#" class="py-2 d-block">Terms &amp; Conditions</a></li>
                  <li><a href="#" class="py-2 d-block">Privacy Policy</a></li>
                </ul>
                <ul class="list-unstyled">
                  <li><a href="#" class="py-2 d-block">FAQs</a></li>
                  <li><a href="#" class="py-2 d-block">Contact</a></li>
                </ul>
              </div>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
              <h2 class="ftco-heading-2">Have a Questions?</h2>
              <div class="block-23 mb-3">
                <ul>
                  <li><span class="icon icon-map-marker"></span><span class="text">203 Fake St. Mountain View, San Francisco, California, USA</span></li>
                  <li><a href="#"><span class="icon icon-phone"></span><span class="text">+2 392 3929 210</span></a></li>
                  <li><a href="#"><span class="icon icon-envelope"></span><span class="text">info@yourdomain.com</span></a></li>
                </ul>
              </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12 text-center">

          <p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                        Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="icon-heart color-danger" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                      </p>
        </div>
      </div>
    </div>
  </footer>
  







<!-- loader -->
<div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px"><circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee"/><circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00"/></svg></div>
<div id="snackbar"></div>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const quantityInputs = document.querySelectorAll('.quantity');
        
        quantityInputs.forEach(function (quantityInput) {
            const input = quantityInput.querySelector('input');
            const increaseButton = quantityInput.querySelector('.quantity-increase');
            const decreaseButton = quantityInput.querySelector('.quantity-decrease');

            increaseButton.addEventListener('click', function () {
                let currentValue = parseInt(input.value);
                if (currentValue < parseInt(input.max)) {
                    input.value = currentValue + 1;
                }
            });

            decreaseButton.addEventListener('click', function () {
                let currentValue = parseInt(input.value);
                if (currentValue > parseInt(input.min)) {
                    input.value = currentValue - 1;
                }
            });
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
    const removeButtons = document.querySelectorAll('.remove-product');

    removeButtons.forEach(button => {
        button.addEventListener('click', async function (event) {
            event.preventDefault();
            const productId = this.getAttribute('data-product-id');

            try {
                const response = await fetch(`/removeFromCart/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                });

                if (!response.ok) {
                    throw new Error('Failed to remove product from cart');
                }

                const data = await response.json();

                if (data.success === true) {
                    showsnackbar('product has been removed')
                        // Optionally handle UI updates (like removing the row from the table)
                        this.closest('tr').remove();
                    } else {
                        throw new Error('Failed to remove product from cart');
                    }
                } catch (error) {
                    console.error('Error removing product from cart:', error);
                    showsnackbar('error occurd')
            }
        });
    });
});
function showsnackbar(text) {
  // Get the snackbar DIV
  var x = document.getElementById("snackbar");
  x.innerHTML = text
  // Add the "show" class to DIV
  x.className = "show";

  // After 3 seconds, remove the show class from DIV
  setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
}

</script>

<script src="/static/user/js/jquery.min.js"></script>
<script src="/static/user/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/user/js/popper.min.js"></script>
<script src="/static/user/js/bootstrap.min.js"></script>
<script src="/static/user/js/jquery.easing.1.3.js"></script>
<script src="/static/user/js/jquery.waypoints.min.js"></script>
<script src="/static/user/js/jquery.stellar.min.js"></script>
<script src="/static/user/js/owl.carousel.min.js"></script>
<script src="/static/user/js/jquery.magnific-popup.min.js"></script>
<script src="/static/user/js/aos.js"></script>
<script src="/static/user/js/jquery.animateNumber.min.js"></script>
<script src="/static/user/js/bootstrap-datepicker.js"></script>
<script src="/static/user/js/scrollax.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
<script src="/static/user/js/google-map.js"></script>
<script src="/static/user/js/main.js"></script>


<%- include('./footer.ejs') %>



new changed addtocart ejs with added total 

<%-include ('./header.ejs') %>
<style>
   .input-group-prepend,
    .input-group-append {
        flex: 0 0 auto;
    }

    .quantity-decrease,
    .quantity-increase {
        width: 38px;
        height: 38px;
        font-size: 1rem;
    }

    .quantity {
        min-width: 100px; 
    }
    .thead-primary th {
        background-color: black;
        color: white;
    }



    #snackbar {
        visibility: hidden;
        min-width: 250px;
        margin-left: -125px;
        background: linear-gradient(to right, #00b09b, #96c93d); 
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 16px;
        position: fixed;
        z-index: 1;
        left: 50%;
        bottom: 30px;
    }


#snackbar.show {
  visibility: visible; 
  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
  animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

@-webkit-keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@-webkit-keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}

@keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}
</style>


<section class="ftco-section ftco-cart">
    <div class="container">
        <div class="row">
            <div class="col-md-12 ftco-animate">
                <div class="cart-list" >
                    <table class="table">
                        <thead class="thead-primary text-white" style="background-color: black;">
                            <tr class="text-center">
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th class="text-white">Product</th>
                                <th class="text-white">Price</th>
                                <th class="text-white">Quantity</th>
                                <th class="text-white">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cart.products.forEach(item => { %>
                                <tr class="text-center product-row" data-product-id="<%= item.productId._id %>">
                                    <td class="product-remove">
                                        <a href="#" class="remove-product" data-product-id="<%= item.productId._id %>">
                                            <span class="ion-ios-close"></span>
                                        </a>
                                    </td>
                                    <td class="image-prod">
                                        <div class="img" style="background-image: url('<%= '/static/productimages/' + item.productId.image[0] %>');"></div>
                                    </td>
                                    <td class="product-name">
                                        <h3><%= item.productId.name %></h3>
                                        <p><%= item.productId.description %></p>
                                    </td>
                                    <td class="price">₹<%= item.productId.price.toFixed(2) %></td>
                                    <td class="quantity">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <button class="quantity-decrease btn btn-outline-secondary" type="button">-</button>
                                            </div>
                                            <input type="number" name="quantity" class="quantity-input form-control text-center" value="<%= item.quantity %>" min="1" max="100">
                                            <div class="input-group-append">
                                                <button class="quantity-increase btn btn-outline-secondary" type="button">+</button>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="total">₹<%= (item.productId.price * item.quantity).toFixed(2) %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col col-lg-5 col-md-6 mt-5 cart-wrap ftco-animate">
                <div class="cart-total mb-3">
                    <h3>Cart Totals</h3>
                    <p class="d-flex">
                        <span>Subtotal</span>
                        <span>$20.60</span>
                    </p>
                    <p class="d-flex">
                        <span>Delivery</span>
                        <span>$0.00</span>
                    </p>
                    <p class="d-flex">
                        <span>Discount</span>
                        <span>$3.00</span>
                    </p>
                    <hr>
                    <p class="d-flex total-price">
                        <span>Total</span>
                        <span>$17.60</span>
                    </p>
                </div>
                <p class="text-center"><a href="checkout.html" class="btn btn-primary py-3 px-4">Proceed to Checkout</a></p>
            </div>
        </div>
    </div>
</section>

  <footer class="ftco-footer bg-light ftco-section">
    <div class="container">
        <div class="row">
            <div class="mouse">
                      <a href="#" class="mouse-icon">
                          <div class="mouse-wheel"><span class="ion-ios-arrow-up"></span></div>
                      </a>
                  </div>
        </div>
      <div class="row mb-5">
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Winkel</h2>
            <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia.</p>
            <ul class="ftco-footer-social list-unstyled float-md-left float-lft mt-5">
              <li class="ftco-animate"><a href="#"><span class="icon-twitter"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-facebook"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-instagram"></span></a></li>
            </ul>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4 ml-md-5">
            <h2 class="ftco-heading-2">Menu</h2>
            <ul class="list-unstyled">
              <li><a href="#" class="py-2 d-block">Shop</a></li>
              <li><a href="#" class="py-2 d-block">About</a></li>
              <li><a href="#" class="py-2 d-block">Journal</a></li>
              <li><a href="#" class="py-2 d-block">Contact Us</a></li>
            </ul>
          </div>
        </div>
        <div class="col-md-4">
           <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Help</h2>
            <div class="d-flex">
                <ul class="list-unstyled mr-l-5 pr-l-3 mr-4">
                  <li><a href="#" class="py-2 d-block">Shipping Information</a></li>
                  <li><a href="#" class="py-2 d-block">Returns &amp; Exchange</a></li>
                  <li><a href="#" class="py-2 d-block">Terms &amp; Conditions</a></li>
                  <li><a href="#" class="py-2 d-block">Privacy Policy</a></li>
                </ul>
                <ul class="list-unstyled">
                  <li><a href="#" class="py-2 d-block">FAQs</a></li>
                  <li><a href="#" class="py-2 d-block">Contact</a></li>
                </ul>
              </div>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
              <h2 class="ftco-heading-2">Have a Questions?</h2>
              <div class="block-23 mb-3">
                <ul>
                  <li><span class="icon icon-map-marker"></span><span class="text">203 Fake St. Mountain View, San Francisco, California, USA</span></li>
                  <li><a href="#"><span class="icon icon-phone"></span><span class="text">+2 392 3929 210</span></a></li>
                  <li><a href="#"><span class="icon icon-envelope"></span><span class="text">info@yourdomain.com</span></a></li>
                </ul>
              </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12 text-center">

          <p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                        Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="icon-heart color-danger" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                      </p>
        </div>
      </div>
    </div>
  </footer>
  







<!-- loader -->
<div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px"><circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee"/><circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00"/></svg></div>
<div id="snackbar"></div>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const productRows = document.querySelectorAll('.product-row');

        // Function to update total based on quantity
        function updateTotal(row) {
            const quantityInput = row.querySelector('.quantity-input');
            const price = parseFloat(row.querySelector('.price').textContent.replace('₹', ''));
            const quantity = parseInt(quantityInput.value);
            const totalCell = row.querySelector('.total');
            const total = (price * quantity).toFixed(2);
            if (totalCell) {
                totalCell.textContent = `₹${total}`;
            }
        }

        // Initial total calculation on page load
        productRows.forEach(function (row) {
            updateTotal(row);
        });

        // Event listeners for quantity buttons
        productRows.forEach(function (row) {
            const decreaseButton = row.querySelector('.quantity-decrease');
            const increaseButton = row.querySelector('.quantity-increase');
            const quantityInput = row.querySelector('.quantity-input');

            decreaseButton.addEventListener('click', function () {
                let currentValue = parseInt(quantityInput.value);
                if (currentValue > parseInt(quantityInput.min)) {
                    quantityInput.value = currentValue - 1;
                    updateTotal(row);
                }
            });

            increaseButton.addEventListener('click', function () {
                let currentValue = parseInt(quantityInput.value);
                if (currentValue < parseInt(quantityInput.max)) {
                    quantityInput.value = currentValue + 1;
                    updateTotal(row);
                }
            });

            quantityInput.addEventListener('input', function () {
                updateTotal(row);
            });
        });

        // Optional: Remove product functionality
        const removeButtons = document.querySelectorAll('.remove-product');
        removeButtons.forEach(button => {
            button.addEventListener('click', async function (event) {
                event.preventDefault();
                const productId = this.getAttribute('data-product-id');

                try {
                    const response = await fetch(`/removeFromCart/${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    });

                    if (!response.ok) {
                        throw new Error('Failed to remove product from cart');
                    }

                    const data = await response.json();

                    if (data.success === true) {
                        showsnackbar('Product has been removed');
                        // Optionally handle UI updates (like removing the row from the table)
                        this.closest('tr').remove();
                    } else {
                        throw new Error('Failed to remove product from cart');
                    }
                } catch (error) {
                    console.error('Error removing product from cart:', error);
                    showsnackbar('An error occurred');
                }
            });
        });

        // Function to display snackbar message
        function showsnackbar(text) {
            const snackbar = document.getElementById("snackbar");
            if (snackbar) {
                snackbar.innerHTML = text;
                snackbar.classList.add('show');
                setTimeout(function () {
                    snackbar.classList.remove('show');
                }, 3000);
            }
        }
    });
</script>




<script>
    document.addEventListener('DOMContentLoaded', function () {
    const removeButtons = document.querySelectorAll('.remove-product');

    removeButtons.forEach(button => {
        button.addEventListener('click', async function (event) {
            event.preventDefault();
            const productId = this.getAttribute('data-product-id');

            try {
                const response = await fetch(`/removeFromCart/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                });

                if (!response.ok) {
                    throw new Error('Failed to remove product from cart');
                }

                const data = await response.json();

                if (data.success === true) {
                    showsnackbar('product has been removed')
                        // Optionally handle UI updates (like removing the row from the table)
                        this.closest('tr').remove();
                    } else {
                        throw new Error('Failed to remove product from cart');
                    }
                } catch (error) {
                    console.error('Error removing product from cart:', error);
                    showsnackbar('error occurd')
            }
        });
    });
});
function showsnackbar(text) {
  // Get the snackbar DIV
  var x = document.getElementById("snackbar");
  x.innerHTML = text
  // Add the "show" class to DIV
  x.className = "show";

  // After 3 seconds, remove the show class from DIV
  setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
  
}

</script>

<script src="/static/user/js/jquery.min.js"></script>
<script src="/static/user/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/user/js/popper.min.js"></script>
<script src="/static/user/js/bootstrap.min.js"></script>
<script src="/static/user/js/jquery.easing.1.3.js"></script>
<script src="/static/user/js/jquery.waypoints.min.js"></script>
<script src="/static/user/js/jquery.stellar.min.js"></script>
<script src="/static/user/js/owl.carousel.min.js"></script>
<script src="/static/user/js/jquery.magnific-popup.min.js"></script>
<script src="/static/user/js/aos.js"></script>
<script src="/static/user/js/jquery.animateNumber.min.js"></script>
<script src="/static/user/js/bootstrap-datepicker.js"></script>
<script src="/static/user/js/scrollax.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
<script src="/static/user/js/google-map.js"></script>
<script src="/static/user/js/main.js"></script>


<%- include('./footer.ejs') %>


add product ejs

<%- include('./adminHeader.ejs') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

<div class="col-12 grid-margin stretch-card">
    <div class="card">
      <div class="card-body">
        <h4 class="card-title">Basic form elements</h4>
        <p class="card-description"> Basic form elements </p>
        <form  id="productForm"  class="forms-sample" method="post" action="/admin/insertProducts" enctype="multipart/form-data">
        
          <div class="form-group">
            <label for="exampleInputName1">Name</label>
            <input type="text" class="form-control" id="exampleInputName1" style="color: rgb(252, 252, 252);width: 85%;" name="name" >
            <small id="nameError" class="form-text text-danger"></small>
          </div>
          <div class="form-group">
            <label for="exampleSelectCategory">Category</label>
            <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="category" >
              <option></option>
              <% for(let i=0;i<categories.length;i++){ %>
              <option><%= categories[i].name %></option>
              <% } %>
            </select>
            <small id="categoryError" class="form-text text-danger"></small>
          </div>
          <div class="form-group">
            <label for="exampleSelectCategory">Brand</label>
            <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="brand" >
              <option></option>
              <% for(let i=0;i<brand.length;i++){ %>
              <option><%= brand[i].name %></option>
              <% } %>
            </select>
            <small id="brandError" class="form-text text-danger"></small>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Models</label>
            <input type="text" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="model" >
            <small id="modelError" class="form-text text-danger"></small>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Material</label>
            <input type="text" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="material" >
            <small id="materialError" class="form-text text-danger"></small>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Price</label>
            <input type="number" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="price" >
            <small id="priceError" class="form-text text-danger"></small>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">discount</label>
            <input type="number" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="discount" >
            <small id="discountError" class="form-text text-danger"></small>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Stock</label>
            <input type="number" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 15%;" name="stock" >
            <small id="stockError" class="form-text text-danger"></small>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Discription</label>
            <textarea class="form-control" id="exampleInputPassword4" name="discription" style ="color: rgb(252, 252, 252);width: 85%; height: 80px;" ></textarea>
            <small id="descriptionError" class="form-text text-danger"></small>
          </div>

          <div style="height: 100px; width: 30%;">
            <label for="ocs-productImage" class="ocs-product-label">Upload Image</label>
            <input type="file" id="ocs-productImage" name="image"  class="form-control" multiple onchange="previewImages()">
            <small id="imageError" class="form-text text-danger"></small>
          </div>

          <h4>Added images</h4>
          <div id="imagePreview" style="display: flex; flex-wrap: wrap;"></div><br>

          <button type="button" class="btn btn-secondary" onclick="openCropModal()">Crop Images</button><br><br>

          <div id="croppedImagesContainer"></div>

          <button type="submit" class="btn btn-primary me-2">Submit</button>
          <button class="btn btn-dark"><a href="/admin/products" style="text-decoration: none;color: rgb(252, 252, 252);">Cancel</a></button>
        </form>
      </div>
    </div>
  </div>

<!-- Cropping Modal -->
<div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cropModalLabel">Crop Images</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div id="cropperContainer" style="display: flex; flex-wrap: wrap;"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onclick="cropAllImages()">Crop</button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<!-- Include jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<script>
  function validateForm() {
      let isValid = true;

      // Get form elements
      const name = document.getElementById('exampleInputName1');
      const category = document.getElementById('exampleSelectCategory');
      const brand = document.getElementById('exampleSelectBrand');
      const model = document.getElementById('exampleInputModel');
      const material = document.getElementById('exampleInputMaterial');
      const price = document.getElementById('exampleInputPrice');
      const discount = document.getElementById('exampleInputDiscount');
      const stock = document.getElementById('exampleInputStock');
      const description = document.getElementById('exampleInputDescription');
      const image = document.getElementById('ocs-productImage');

      // Clear previous error messages
      document.getElementById('nameError').textContent = '';
      document.getElementById('categoryError').textContent = '';
      document.getElementById('brandError').textContent = '';
      document.getElementById('modelError').textContent = '';
      document.getElementById('materialError').textContent = '';
      document.getElementById('priceError').textContent = '';
      document.getElementById('discountError').textContent = '';
      document.getElementById('stockError').textContent = '';
      document.getElementById('descriptionError').textContent = '';
      document.getElementById('imageError').textContent = '';

      // Validate each field
      if (name.value.trim() === '') {
          document.getElementById('nameError').textContent = 'Name is required';
          isValid = false;
      }

      if (category.value.trim() === '') {
          document.getElementById('categoryError').textContent = 'Category is required';
          isValid = false;
      }

      if (brand.value.trim() === '') {
          document.getElementById('brandError').textContent = 'Brand is required';
          isValid = false;
      }

      if (model.value.trim() === '') {
          document.getElementById('modelError').textContent = 'Model is required';
          isValid = false;
      }

      if (material.value.trim() === '') {
          document.getElementById('materialError').textContent = 'Material is required';
          isValid = false;
      }

      if (price.value.trim() === '' || price.value <= 0) {
          document.getElementById('priceError').textContent = 'Price must be a positive number';
          isValid = false;
      }

      if (discount.value.trim() === '' || discount.value < 0) {
          document.getElementById('discountError').textContent = 'Discount cannot be negative';
          isValid = false;
      }

      if (stock.value.trim() === '' || stock.value <= 0) {
          document.getElementById('stockError').textContent = 'Stock must be a positive number';
          isValid = false;
      }

      if (description.value.trim() === '') {
          document.getElementById('descriptionError').textContent = 'Description is required';
          isValid = false;
      }

      if (image.files.length === 0) {
          document.getElementById('imageError').textContent = 'At least one image is required';
          isValid = false;
      }

      return isValid;
  }

  function previewImages() {
  }

  function openCropModal() {
  }
</script>



<script>
  let croppers = [];
  let cropperElements = [];

  function openCropModal() {
    const cropperContainer = document.getElementById('cropperContainer');
    cropperContainer.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      croppers = [];
      cropperElements = [];
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '200px';
          img.style.margin = '10px';
          img.setAttribute('data-index', i);

          cropperContainer.appendChild(img);

          const cropper = new Cropper(img, {
            aspectRatio: 1,
            viewMode: 1,
            autoCropArea: 1,
          });

          croppers.push(cropper);
          cropperElements.push(img);
        };

        reader.readAsDataURL(file);
      }
    }

    $('#cropModal').modal('show');
  }

  function cropAllImages() {
    const croppedImagesContainer = document.getElementById('imagePreview');
    croppedImagesContainer.innerHTML = '';

    croppers.forEach((cropper, index) => {
      const canvas = cropper.getCroppedCanvas();
      const src = canvas.toDataURL();

      const imgContainer = document.createElement('div');
      imgContainer.style.position = 'relative';
      imgContainer.style.margin = '10px';

      const img = document.createElement('img');
      img.src = src;
      img.style.maxWidth = '100px';

      const closeButton = document.createElement('span');
      closeButton.innerHTML = '&times;';
      closeButton.style.position = 'absolute';
      closeButton.style.top = '5px';
      closeButton.style.right = '5px';
      closeButton.style.background = 'rgba(0, 0, 0, 0.5)';
      closeButton.style.color = 'white';
      closeButton.style.borderRadius = '50%';
      closeButton.style.padding = '5px';
      closeButton.style.cursor = 'pointer';
      closeButton.addEventListener('click', () => {
        croppers.splice(index, 1);
        cropperElements.splice(index, 1);
        imgContainer.remove();
      });

      imgContainer.appendChild(img);
      imgContainer.appendChild(closeButton);
      croppedImagesContainer.appendChild(imgContainer);
    });

    $('#cropModal').modal('hide');
  }

  function previewImages() {
    const preview = document.getElementById('imagePreview');
    preview.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const imgContainer = document.createElement('div');
          imgContainer.style.position = 'relative';
          imgContainer.style.margin = '10px';

          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '100px';

          const closeButton = document.createElement('span');
          closeButton.innerHTML = '&times;';
          closeButton.style.position = 'absolute';
          closeButton.style.top = '5px';
          closeButton.style.right = '5px';
          closeButton.style.background = 'rgba(0, 0, 0, 0.5)';
          closeButton.style.color = 'white';
          closeButton.style.borderRadius = '50%';
          closeButton.style.padding = '5px';
          closeButton.style.cursor = 'pointer';
          closeButton.addEventListener('click', () => imgContainer.remove());

          imgContainer.appendChild(img);
          imgContainer.appendChild(closeButton);
          preview.appendChild(imgContainer);
        };

        reader.readAsDataURL(file);
      }
    }
  }

  // Handle form submission
  document.getElementById('productForm').addEventListener('submit', function (event) {
    event.preventDefault(); // Prevent default form submission

    const form = event.target;
    const formData = new FormData(form);

    // Remove original 'image' field from formData
    formData.delete('image');

    // Append cropped images as blobs
    croppers.forEach((cropper, index) => {
      const canvas = cropper.getCroppedCanvas();
      canvas.toBlob(blob => {
        formData.append('image', blob, `croppedImage${index}.png`);
      });
    });

    // Wait for all blobs to be added to formData
    setTimeout(() => {
      fetch(form.action, {
          method: form.method,
          body: formData
        })
        .then(response => {
          if (response.ok) {
            window.location.href = '/admin/products'; // Redirect on success
          } else {
            alert('An error occurred while submitting the form');
          }
        })
        .catch(error => {
          console.error(error);
          alert('An error occurred while submitting the form');
        });
    }, 500); // Delay to ensure blobs are added to formData
  });
</script>


<%- include('./adminFooter.ejs') %>


edit product 

<%- include('./adminHeader.ejs') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

<div class="col-12 grid-margin stretch-card">
  <div class="card">
    <div class="card-body">
      <h4 class="card-title">Basic form elements</h4>
      <p class="card-description">Basic form elements</p>
      <form id="productForm" class="forms-sample" method="post" action="/admin/insertEditProducts?pid=<%= product._id %>" enctype="multipart/form-data">

        <div class="form-group">
          <label for="exampleInputName1">Name</label>
          <input type="text" class="form-control" id="exampleInputName1" style="color: rgb(252, 252, 252);width: 85%;" name="name" value="<%= product.name %>" required>
        </div>
        <div class="form-group">
          <label for="exampleSelectCategory">Category</label>
          <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="category" required>
            <option><%= product.category %></option>
            <% for(let i=0;i<categories.length;i++){ %>
            <option><%=categories[i].name%></option>
            <% } %>
          </select>
        </div>
        <div class="form-group">
          <label for="exampleSelectBrand">Brand</label>
          <select class="form-control" id="exampleSelectBrand" style="color: rgb(252, 252, 252);width: 85%;" name="brand" required>
            <option><%= product.brand %></option>
            <% for(let i=0;i<brands.length;i++){ %>
            <option><%=brands[i].name%></option>
            <% } %>
          </select>
        </div>
        <div class="form-group">
          <label for="exampleInputModel">Model</label>
          <input type="text" class="form-control" id="exampleInputModel" style="color: rgb(252, 252, 252);width: 85%;" name="model" value="<%= product.model %>" required>
        </div>
        <div class="form-group">
          <label for="exampleInputMaterial">Material</label>
          <input type="text" class="form-control" id="exampleInputMaterial" style="color: rgb(252, 252, 252);width: 85%;" name="material" value="<%= product.material %>" required>
        </div>
        <div class="form-group">
          <label for="exampleInputPrice">Price</label>
          <input type="number" class="form-control" id="exampleInputPrice" style="color: rgb(252, 252, 252);width: 85%;" name="price" value="<%= product.price %>" required>
        </div>
        <div class="form-group">
          <label for="exampleInputPrice">discount</label>
          <input type="number" class="form-control" id="exampleInputPrice" style="color: rgb(252, 252, 252);width: 85%;" name="discount" value="<%= product.discount %>" required>
        </div>
        <div class="form-group">
          <label for="exampleInputStock">Stock</label>
          <input type="number" class="form-control" id="exampleInputStock" style="color: rgb(252, 252, 252);width: 15%;" name="stock" value="<%= product.stock %>" required>
        </div>
        <div class="form-group">
          <label for="exampleInputDescription">Description</label>
          <textarea class="form-control" id="exampleInputDescription" name="discription" style="color: rgb(252, 252, 252);width: 85%; height: 80px;" required><%= product.discription %></textarea>
        </div>

        <h4>Images</h4>
        <div id="imagePreview" style="display: flex; flex-wrap: wrap;">
          <% product.image.forEach((item, index) => { %>
          <div style="position: relative; display: inline-block; margin: 10px;">
            <img src="/static/productImages/<%= item %>" style="width: 100px; height: 100px; background-color: aliceblue;">
            <span onclick="removeExistingImage(<%= index %>)" style="position: absolute; top: 5px; right: 5px; background: rgba(0, 0, 0, 0.5); color: white; border-radius: 50%; padding: 5px; cursor: pointer;">&times;</span>
            <input type="hidden" name="existingImages[]" value="<%= item %>">
          </div>
          <% }) %>
        </div>

        <div style="height: 100px; width: 30%;">
          <label for="ocs-productImage" class="ocs-product-label">Upload Image</label>
          <input type="file" id="ocs-productImage" name="image" class="form-control" multiple onchange="previewImages()">
        </div>

        <button type="button" class="btn btn-secondary" onclick="openCropModal()">Crop Images</button><br><br>

        <div id="croppedImagesContainer"></div>

        <button type="submit" class="btn btn-primary me-2">Submit</button>
        <button class="btn btn-dark"><a href="/admin/products" style="text-decoration: none;color: rgb(252, 252, 252);">Cancel</a></button>
      </form>
    </div>
  </div>
</div>

<!-- Cropping Modal -->
<div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cropModalLabel">Crop Images</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div id="cropperContainer" style="display: flex; flex-wrap: wrap;"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onclick="cropAllImages()">Crop</button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<!-- Include jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
  let croppers = [];

  function previewImages() {
    const preview = document.getElementById('imagePreview');
    preview.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const imgContainer = document.createElement('div');
          imgContainer.style.position = 'relative';
          imgContainer.style.margin = '10px';

          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '100px';

          const closeButton = document.createElement('span');
          closeButton.innerHTML = '&times;';
          closeButton.style.position = 'absolute';
          closeButton.style.top = '5px';
          closeButton.style.right = '5px';
          closeButton.style.background = 'rgba(0, 0, 0, 0.5)';
          closeButton.style.color = 'white';
          closeButton.style.borderRadius = '50%';
          closeButton.style.padding = '5px';
          closeButton.style.cursor = 'pointer';
          closeButton.addEventListener('click', () => imgContainer.remove());

          imgContainer.appendChild(img);
          imgContainer.appendChild(closeButton);
          preview.appendChild(imgContainer);
        };

        reader.readAsDataURL(file);
      }
    }
  }

  function removeExistingImage(index) {
    const existingImages = document.getElementsByName('existingImages[]');
    if (existingImages[index]) {
      existingImages[index].value = '';
      const imgContainer = existingImages[index].parentElement;
      imgContainer.style.display = 'none';
    }
  }

  function openCropModal() {
    const cropperContainer = document.getElementById('cropperContainer');
    cropperContainer.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      croppers = [];
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '200px';
          img.style.margin = '10px';
          img.setAttribute('data-index', i);

          cropperContainer.appendChild(img);

          const cropper = new Cropper(img, {
            aspectRatio: 1,
            viewMode: 1,
            autoCropArea: 1,
            responsive: true
          });

          croppers.push(cropper);
        };

        reader.readAsDataURL(file);
      }
    }

    $('#cropModal').modal('show');
  }

  function cropAllImages() {
    const croppedImagesContainer = document.getElementById('croppedImagesContainer');
    croppedImagesContainer.innerHTML = '';

    const promises = [];
    croppers.forEach((cropper, index) => {
      promises.push(new Promise((resolve, reject) => {
        cropper.getCroppedCanvas().toBlob((blob) => {
          const croppedImg = new Image();
          croppedImg.src = URL.createObjectURL(blob);
          croppedImg.style.maxWidth = '100px';
          croppedImg.style.margin = '10px';
          croppedImagesContainer.appendChild(croppedImg);
          resolve({ index, blob });
        });
      }));
    });

    Promise.all(promises).then((results) => {
      results.forEach(({ index, blob }) => {
        const file = document.getElementById('ocs-productImage').files[index];
        const formData = new FormData();
        formData.append('croppedImages[]', blob, file.name);
      });

      $('#cropModal').modal('hide');
    });
  }
</script>


  <%- include('./adminFooter.ejs') %>


  address ejs 

  <%- include('./header.ejs') %>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<!-- Include Toastify CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">


<style>
    .kpl-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        margin: 0;
        background-color: #f9f9f9;
        font-family: Arial, sans-serif;
        padding: 7%;
    }
    .kpl-content {
        width: 100%;
        max-width: 800px;
        padding: 20px;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .kpl-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    .kpl-title {
        font-size: 24px;
        color: #333;
    }
    .kpl-button {
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
    .kpl-button-add {
        background-color: #000000;
        font-size: 13px;
        font-weight: bolder;
        color: white;
    }
    .kpl-address-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }
    .kpl-address-item {
        padding: 15px;
        border: 1px solid #ccc;
        border-radius: 10px;
        background-color: #fff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .kpl-address-details {
        font-size: 18px;
        line-height: 1.6;
        color: #555;
    }
    .kpl-button-container {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
    }
    .kpl-button-edit {
        background-color: #1ba482;
        font-size: 13px;
        font-weight: bolder;
        color: white;
    }
    .kpl-button-delete {
        background-color: #f44336;
        font-size: 13px;
        font-weight: bolder;
        color: white;
    }
</style>


<div class="breadcrumbs" style="background-color: #f9f9f9;">
    <div class="container">
        <div class="row">
            <div class="col">
                <p class="bread"><span><a href="/" style="color: rgb(142, 142, 142);text-decoration: none;">home</a></span> / <span><a href="/userProfile" style="color: rgb(142, 142, 142);text-decoration: none;">profile</a></span> / <span style="color: rgb(142, 142, 142);">address</span></p>
            </div>
        </div>
     </div>
  </div>

<div class="kpl-container">
    <div class="kpl-content">
        <div class="kpl-header">
            <div class="kpl-title" style="position: relative;left: 30%;font-family: Verdana, Geneva, Tahoma, sans-serif;">Manage Addresses</div>
            <button class="kpl-button kpl-button-add" data-toggle="modal" data-target="#addAddressModal">Add Address</button>
        </div>
        <% for (let i = 0; i < address.length; i++) { %>
            <div class="kpl-address-list">
                <div class="kpl-address-item">
                    <div class="kpl-address-details">
                        <p><strong>Name:</strong> <span style="font-size: 15px;"> <%= address[i].name %></span></p>
                        <p><strong>Mobile:</strong> <span style="font-size: 15px;"> <%= address[i].mobile%></span></p>
                        <p><strong>Street:</strong> <span style="font-size: 15px;"> <%= address[i].street %></span></p>
                        <p><strong>City:</strong> <span style="font-size: 15px;"> <%= address[i].city %></span></p>
                        <p><strong>State:</strong> <span style="font-size: 15px;"> <%= address[i].state %></span></p>
                        <p><strong>Zip Code:</strong> <span style="font-size: 15px;"> <%= address[i].zipcode %></span></p>
                        <p><strong>Country:</strong> <span style="font-size: 15px;"> <%= address[i].country %></span></p>
                    </div>
                    <div class="kpl-button-container">
                        <button class="kpl-button kpl-button-edit" data-toggle="modal" data-target="#editAddressModal">Edit</button>
                        <button class="kpl-button kpl-button-delete" data-id="<%= address[i]._id %>">Delete</button>
                    </div>
                </div>
            </div>
            <br>

            <!-- Edit Address Modal -->
<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editAddressForm" action="/editAddress?id=<%=address[i]._id%>" method="POST">
                  
                    <div class="form-group">
                        <label for="editName">Name</label>
                        <input type="text" class="form-control" id="editName" placeholder="Enter name" value="<%=address[i].name%>" name="name" required>
                    </div>
                    <div class="form-group">
                        <label for="editMobile">Mobile</label>
                        <input type="text" class="form-control" id="editMobile" placeholder="Enter mobile number" value="<%=address[i].mobile%>" name="mobile" required>
                    </div>
                    <div class="form-group">
                        <label for="editStreet">Street</label>
                        <input type="text" class="form-control" id="editStreet" placeholder="Enter street" value="<%=address[i].street%>" name="street" required>
                    </div>
                    <div class="form-group">
                        <label for="editCity">City</label>
                        <input type="text" class="form-control" id="editCity" placeholder="Enter city" value="<%=address[i].city%>" name="city" required>
                    </div>
                    <div class="form-group">
                        <label for="editState">State</label>
                        <input type="text" class="form-control" id="editState" placeholder="Enter state" value="<%=address[i].state%>" name="state" required>
                    </div>
                    <div class="form-group">
                        <label for="editZip">Zip Code</label>
                        <input type="text" class="form-control" id="editZip" placeholder="Enter zip code" value="<%=address[i].zipcode%>" name="zipcode" required>
                    </div>
                    <div class="form-group">
                        <label for="editCountry">Country</label>
                        <input type="text" class="form-control" id="editCountry" placeholder="Enter country" value="<%=address[i].country%>" name="country" required>
                    </div>
                    <!-- Ensure the buttons are inside the form -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
        <% } %>
    </div>
</div>

<!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addAddressForm" action="/addAddress" method="POST">
                    <div class="form-group">
                        <label for="name">Name</label>
                        <input type="text" class="form-control" id="name" placeholder="Enter name" name="name" required>
                    </div>
                    <div class="form-group">
                        <label for="mobile">Mobile</label>
                        <input type="text" class="form-control" id="mobile" placeholder="Enter mobile number" name="mobile" required>
                    </div>
                    <div class="form-group">
                        <label for="street">Street</label>
                        <input type="text" class="form-control" id="street" placeholder="Enter street" name="street" required>
                    </div>
                    <div class="form-group">
                        <label for="city">City</label>
                        <input type="text" class="form-control" id="city" placeholder="Enter city" name="city" required>
                    </div>
                    <div class="form-group">
                        <label for="state">State</label>
                        <input type="text" class="form-control" id="state" placeholder="Enter state" name="state" required>
                    </div>
                    <div class="form-group">
                        <label for="zip">Zip Code</label>
                        <input type="text" class="form-control" id="zip" placeholder="Enter zip code" name="zipcode" required>
                    </div>
                    <div class="form-group">
                        <label for="country">Country</label>
                        <input type="text" class="form-control" id="country" placeholder="Enter country" name="country" required>
                    </div>
                    <!-- Ensure the buttons are inside the form -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Address</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<footer class="ftco-footer bg-light ftco-section">
    <div class="container">
        <div class="row">
            <div class="mouse">
                      <a href="#" class="mouse-icon">
                          <div class="mouse-wheel"><span class="ion-ios-arrow-up"></span></div>
                      </a>
                  </div>
        </div>
      <div class="row mb-5">
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Winkel</h2>
            <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia.</p>
            <ul class="ftco-footer-social list-unstyled float-md-left float-lft mt-5">
              <li class="ftco-animate"><a href="#"><span class="icon-twitter"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-facebook"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-instagram"></span></a></li>
            </ul>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4 ml-md-5">
            <h2 class="ftco-heading-2">Menu</h2>
            <ul class="list-unstyled">
              <li><a href="#" class="py-2 d-block">Shop</a></li>
              <li><a href="#" class="py-2 d-block">About</a></li>
              <li><a href="#" class="py-2 d-block">Journal</a></li>
              <li><a href="#" class="py-2 d-block">Contact Us</a></li>
            </ul>
          </div>
        </div>
        <div class="col-md-4">
           <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Help</h2>
            <div class="d-flex">
              <ul class="list-unstyled mr-l-5 pr-l-3 mr-4">
                <li><a href="#" class="py-2 d-block">Shipping Information</a></li>
                <li><a href="#" class="py-2 d-block">Returns &amp; Exchange</a></li>
                <li><a href="#" class="py-2 d-block">Terms &amp; Conditions</a></li>
                <li><a href="#" class="py-2 d-block">Privacy Policy</a></li>
              </ul>
              <ul class="list-unstyled">
                <li><a href="#" class="py-2 d-block">FAQs</a></li>
                <li><a href="#" class="py-2 d-block">Contact</a></li>
              </ul>
            </div>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
              <h2 class="ftco-heading-2">Have a Questions?</h2>
              <div class="block-23 mb-3">
                <ul>
                  <li><span class="icon icon-map-marker"></span><span class="text">203 Fake St. Mountain View, San Francisco, California, USA</span></li>
                  <li><a href="#"><span class="icon icon-phone"></span><span class="text">+2 392 3929 210</span></a></li>
                  <li><a href="#"><span class="icon icon-envelope"></span><span class="text">info@yourdomain.com</span></a></li>
                </ul>
              </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12 text-center">

          <p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
  Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="icon-heart color-danger" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib.com</a>
  <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
  </p>
        </div>
      </div>
    </div>
  </footer>

  
<!-- Include SweetAlert CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.kpl-button-delete').forEach(button => {
            button.addEventListener('click', function() {
                const addressId = this.getAttribute('data-id');
                    
                    Swal.fire({
                        title: 'Are you sure!',
                        text: 'Are you sure you want to delete this address?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/deleteAddress?id=${addressId}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then(response => {
                            if (response.ok) {
                                return response.json(); // Assuming the backend returns JSON
                            } else {
                                throw new Error('Failed to delete address');
                            }
                        }).then(data => {
                            // Store success message in localStorage
                            localStorage.setItem('toastMessage', 'Address deleted successfully');

                            // Reload the page after deletion
                            window.location.reload();
                        }).catch(error => {
                            console.error('Error:', error);
                            // Store error message in localStorage
                            localStorage.setItem('toastMessage', 'Failed to delete address');

                            // Reload the page after deletion
                            window.location.reload();
                        });
                    }
                });
            });
        });

        // Check for stored toast message after page reload
        const toastMessage = localStorage.getItem('toastMessage');
        if (toastMessage) {
            Toastify({
                text: toastMessage,
                duration: 3000, // Display duration in milliseconds
                gravity: 'bottom', // Position of the toast message
                position: 'right', // Position on the screen
                backgroundColor: 'linear-gradient(to right, #00b09b, #96c93d)',
                stopOnFocus: true // Stops the toast from automatically fading out on hover
            }).showToast();
            
            // Clear stored toast message
            localStorage.removeItem('toastMessage');
        }
    });
</script>
<%- include('./footer.ejs') %>






edit prduct page 





<%- include('./adminHeader.ejs') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

<div class="col-12 grid-margin stretch-card">
  <div class="card">
    <div class="card-body">
      <h4 class="card-title">Basic form elements</h4>
      <p class="card-description">Basic form elements</p>
      <form id="productForm" class="forms-sample" method="post" action="/admin/insertEditProducts?pid=<%= product._id %>" enctype="multipart/form-data">

        <div class="form-group">
          <label for="exampleInputName1">Name</label>
          <input type="text" class="form-control" id="exampleInputName1" style="color: rgb(252, 252, 252);width: 85%;" name="name" value="<%= product.name %>" >
          <small class="form-text text-danger" id="errorName"></small>
        </div>
        <div class="form-group">
          <label for="exampleSelectCategory">Category</label>
          <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="category" >
            <option><%= product.category %></option>
            <% for(let i=0;i<categories.length;i++){ %>
            <option><%=categories[i].name%></option>
            <% } %>
          </select>
          <small class="form-text text-danger" id="errorCategory"></small>
        </div>
        <div class="form-group">
          <label for="exampleSelectBrand">Brand</label>
          <select class="form-control" id="exampleSelectBrand" style="color: rgb(252, 252, 252);width: 85%;" name="brand" >
            <option><%= product.brand %></option>
            <% for(let i=0;i<brands.length;i++){ %>
            <option><%=brands[i].name%></option>
            <% } %>
          </select>
          <small class="form-text text-danger" id="errorBrand"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputModel">Model</label>
          <input type="text" class="form-control" id="exampleInputModel" style="color: rgb(252, 252, 252);width: 85%;" name="model" value="<%= product.model %>" >
          <small class="form-text text-danger" id="errorModel"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputMaterial">Material</label>
          <input type="text" class="form-control" id="exampleInputMaterial" style="color: rgb(252, 252, 252);width: 85%;" name="material" value="<%= product.material %>" >
          <small class="form-text text-danger" id="errorMaterial"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputPrice">Price</label>
          <input type="number" class="form-control" id="exampleInputPrice" style="color: rgb(252, 252, 252);width: 85%;" name="price" value="<%= product.price %>" >
          <small class="form-text text-danger" id="errorPrice"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputDiscount">Discount</label>
          <input type="number" class="form-control" id="exampleInputDiscount" style="color: rgb(252, 252, 252);width: 85%;" name="discount" value="<%= product.discount %>" >
          <small class="form-text text-danger" id="errorDiscount"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputStock">Stock</label>
          <input type="number" class="form-control" id="exampleInputStock" style="color: rgb(252, 252, 252);width: 15%;" name="stock" value="<%= product.stock %>" >
          <small class="form-text text-danger" id="errorStock"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputDescription">Description</label>
          <textarea class="form-control" id="exampleInputDescription" name="discription" style="color: rgb(252, 252, 252);width: 85%; height: 80px;" ><%= product.discription %></textarea>
          <small class="form-text text-danger" id="errorDescription"></small>
        </div>

        <h4>Images</h4>
        <div id="imagePreview" style="display: flex; flex-wrap: wrap;">
          <% product.image.forEach((item, index) => { %>
          <div style="position: relative; display: inline-block; margin: 10px;">
            <img src="/static/productImages/<%= item %>" style="width: 100px; height: 100px; background-color: aliceblue;">
            <span onclick="removeExistingImage(<%= index %>)" style="position: absolute; top: 5px; right: 5px; background: rgba(0, 0, 0, 0.5); color: white; border-radius: 50%; padding: 5px; cursor: pointer;">&times;</span>
            <input type="hidden" name="existingImages[]" value="<%= item %>">
          </div>
          <% }) %>
        </div>

        <div style="height: 100px; width: 30%;">
          <label for="ocs-productImage" class="ocs-product-label">Upload Image</label>
          <input type="file" id="ocs-productImage" name="image" class="form-control" multiple onchange="previewImages()">
        </div>

        <button type="button" class="btn btn-secondary" onclick="openCropModal()">Crop Images</button><br><br>

        <div id="croppedImagesContainer"></div>

        <button type="submit" class="btn btn-primary me-2">Submit</button>
        <button class="btn btn-dark"><a href="/admin/products" style="text-decoration: none;color: rgb(252, 252, 252);">Cancel</a></button>
      </form>
    </div>
  </div>
</div>

<!-- Cropping Modal -->
<div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cropModalLabel">Crop Images</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div id="cropperContainer" style="display: flex; flex-wrap: wrap;"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onclick="cropAllImages()">Crop</button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
  let croppers = [];

  function previewImages() {
    const preview = document.getElementById('imagePreview');
    preview.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const imgContainer = document.createElement('div');
          imgContainer.style.position = 'relative';
          imgContainer.style.margin = '10px';

          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '100px';

          const closeButton = document.createElement('span');
          closeButton.innerHTML = '&times;';
          closeButton.style.position = 'absolute';
          closeButton.style.top = '5px';
          closeButton.style.right = '5px';
          closeButton.style.background = 'rgba(0, 0, 0, 0.5)';
          closeButton.style.color = 'white';
          closeButton.style.borderRadius = '50%';
          closeButton.style.padding = '5px';
          closeButton.style.cursor = 'pointer';
          closeButton.addEventListener('click', () => imgContainer.remove());

          imgContainer.appendChild(img);
          imgContainer.appendChild(closeButton);
          preview.appendChild(imgContainer);
        };

        reader.readAsDataURL(file);
      }
    }
  }

  function removeExistingImage(index) {
    const existingImages = document.getElementsByName('existingImages[]');
    if (existingImages[index]) {
      existingImages[index].value = '';
      const imgContainer = existingImages[index].parentElement;
      imgContainer.style.display = 'none';
    }
  }

  function openCropModal() {
    const cropperContainer = document.getElementById('cropperContainer');
    cropperContainer.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      croppers = [];
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '200px';
          img.style.margin = '10px';
          img.setAttribute('data-index', i);

          cropperContainer.appendChild(img);

          const cropper = new Cropper(img, {
            aspectRatio: 1,
            viewMode: 1,
            autoCropArea: 1,
            responsive: true
          });

          croppers.push(cropper);
        };

        reader.readAsDataURL(file);
      }
    }

    $('#cropModal').modal('show');
  }

  function cropAllImages() {
    const croppedImagesContainer = document.getElementById('croppedImagesContainer');
    croppedImagesContainer.innerHTML = '';

    const promises = [];
    croppers.forEach((cropper, index) => {
      promises.push(new Promise((resolve, reject) => {
        cropper.getCroppedCanvas().toBlob((blob) => {
          const croppedImg = new Image();
          croppedImg.src = URL.createObjectURL(blob);
          croppedImg.style.maxWidth = '100px';
          croppedImg.style.margin = '10px';
          croppedImagesContainer.appendChild(croppedImg);
          resolve({ index, blob });
        });
      }));
    });

    Promise.all(promises).then((results) => {
      results.forEach(({ index, blob }) => {
        const file = document.getElementById('ocs-productImage').files[index];
        const formData = new FormData();
        formData.append('croppedImages[]', blob, file.name);
      });

      $('#cropModal').modal('hide');
    });
  }

  function clearValidationMessages() {
    const validationMessages = document.querySelectorAll('.validation-message');
    validationMessages.forEach((message) => message.innerText = '');
  }

  document.querySelectorAll('#productForm input, #productForm select, #productForm textarea').forEach((input) => {
    input.addEventListener('input', clearValidationMessages);
  });

  function validateForm() {
    let isValid = true;

    const name = document.getElementById('exampleInputName1').value.trim();
    const category = document.getElementById('exampleSelectCategory').value.trim();
    const brand = document.getElementById('exampleSelectBrand').value.trim();
    const model = document.getElementById('exampleInputModel').value.trim();
    const material = document.getElementById('exampleInputMaterial').value.trim();
    const price = document.getElementById('exampleInputPrice').value.trim();
    const discount = document.getElementById('exampleInputDiscount').value.trim();
    const stock = document.getElementById('exampleInputStock').value.trim();
    const description = document.getElementById('exampleInputDescription').value.trim();

    if (!name) {
      document.getElementById('errorName').innerText = 'Name is required';
      isValid = false;
    } else {
      document.getElementById('errorName').innerText = '';
    }

    if (!category) {
      document.getElementById('errorCategory').innerText = 'Category is required';
      isValid = false;
    } else {
      document.getElementById('errorCategory').innerText = '';
    }

    if (!brand) {
      document.getElementById('errorBrand').innerText = 'Brand is required';
      isValid = false;
    } else {
      document.getElementById('errorBrand').innerText = '';
    }

    if (!model) {
      document.getElementById('errorModel').innerText = 'Model is required';
      isValid = false;
    } else {
      document.getElementById('errorModel').innerText = '';
    }

    if (!material) {
      document.getElementById('errorMaterial').innerText = 'Material is required';
      isValid = false;
    } else {
      document.getElementById('errorMaterial').innerText = '';
    }

    if (!price) {
      document.getElementById('errorPrice').innerText = 'Price is required';
      isValid = false;
    } else {
      document.getElementById('errorPrice').innerText = '';
    }

    if (!discount || discount < 100 || discount > 1000) {
      document.getElementById('errorDiscount').innerText = 'Discount is required and discount should be in 100 to 1000';
      isValid = false;
    } else {
      document.getElementById('errorDiscount').innerText = '';
    }

    if (!stock || stock < 0) {
      document.getElementById('errorStock').innerText = 'Stock is required and stock cannot be negative';
      isValid = false;
    } else {
      document.getElementById('errorStock').innerText = '';
    }

    if (!description) {
      document.getElementById('errorDescription').innerText = 'Description is required';
      isValid = false;
    } else {
      document.getElementById('errorDescription').innerText = '';
    }

    return isValid;
  }

  document.getElementById('productForm').addEventListener('submit', function (e) {
    if (!validateForm()) {
      e.preventDefault();
    }
  });
</script>

<%- include('./adminFooter.ejs') %>


category page 






<%- include('./adminHeader.ejs') %>

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Striped Table</h4>
            <p class="card-description">Add class <code>.table-striped</code></p>

            <div class="table-responsive">
                <div style="margin-left: 50%;">
                    <button type="button" class="btn btn-outline-danger " data-bs-toggle="modal" data-bs-target="#addCategoryModal">Add Category</button>
                    <button type="button" class="btn btn-outline-danger " > <a href="/admin/deletedCategory" style="text-decoration: none;color: rgb(188, 188, 188);">Restore category</a></button>

                </div>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>Category name</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% categories.forEach((category, i) => { %>
                            <tr>
                                <td style="color: aliceblue;"><%= i + 1 %></td>
                                <td style="color: aliceblue;"><%= category.name %></td>
                                <td>
                                    <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#editCategoryModal<%= i %>" style="width: 80px; background-color: rgb(13, 73, 152);">EDIT</button><br><br>
                                    <button type="button" class="btn btn-danger delete-btn" data-id="<%= category._id %>">DELETE</button>
                                </td>
                            </tr>

                        
                            
                            <!-- Edit Category Modal -->
                            <div class="modal fade" id="editCategoryModal<%= i %>" tabindex="-1" aria-labelledby="editCategoryModalLabel<%= i %>" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="editCategoryModalLabel<%= i %>">Edit Category</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <form method="post" action="/admin/editCategory">
                                                <div class="mb-3">
                                                    <label for="categoryName<%= i %>" class="form-label">Category Name</label>
                                                    <input type="text" class="form-control" style="color: aliceblue;" id="categoryName<%= i %>" name="categoryName" placeholder="Enter category name" value="<%= category.name %>">
                                                    <input type="hidden" name="categoryId" value="<%= category._id %>">
                                                </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                            <button type="submit" class="btn btn-primary">Save changes</button>
                                        </div>
                                    </form>
                                    </div>
                                </div>
                            </div>
                            <!-- Edit Category Modal ends -->
                            
                            <% }); %>

                            <% if(message) {%>
                                <div style="height: 20px;">
                                <p style="color: rgb(246, 0, 0); margin-left: 30%;" id="message"><b><%= message%></b></p>
                                </div>
                                <%}%>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
  
<!-- Add Category Modal -->

<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalLabel">Add Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" action="/admin/category ">
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Category Name</label>
                        <input type="text" class="form-control" style="color: aliceblue;" id="categoryName" name="categoryName" placeholder="Enter category name">
                    </div>
              
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save changes</button>
            </div>
        </form>
        </div>
    </div>
</div>

<script>
      setTimeout(() => {
       const message = document.getElementById('message');
       if (message) {
           message.remove();
       }
    }, 3000);

</script>


<script>
    document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', function() {
            const categoryId = this.getAttribute('data-id');
        
            Swal.fire({
                title: 'Are you sure?',
                text: "Are you sure you want to delete this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/delete-category?id=${categoryId}`, {
                        method: 'POST'
                    })
                    .then(response => {
                        if (response.ok) {
                            Swal.fire(
                                'Deleted!',
                                'The category has been deleted.',
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                'There was an error deleting the category.',
                                'error'
                            );
                        }
                    })
                    .catch(error => {
                        Swal.fire(
                            'Error!',
                            'There was an error deleting the category.',
                            'error'
                        );
                    });
                }
            });
        });
    });
</script>

<%- include('./adminFooter.ejs') %>






checkout page 


<%-include ('./header.ejs') %>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<style>
  .validation-message {
    color: red;
    font-size: 0.875em;
  }
</style>
<style>
  .card-shadow {
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      border: 1px solid #ddd;
  }
  .card-body {
      padding: 0.5rem 1rem;
  }
  .underline {
            border-bottom: 1px solid #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 1rem;
        }

        .card.card-shadow {
    margin-bottom: 20px;
}

.d-none {
    display: none; /* Hide addresses */
}
.btn:hover {
  transform: scale(1.2);
  transition: 5s;
}


.cart-section {
    background-color: #eeeeee; 
    padding: 8px; 
    border-radius: 8px;
    margin-top: 20px;
    width: 50%; 
    margin: 0 auto; 
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); 
}

.cart-header {
    text-align: center;
    margin-bottom: 5px;
    font-size: 18px;
}

.cart-items ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.cart-item {
    background-color: #FFF;
    padding: 6px; 
    margin-bottom: 6px; 
    border-radius: 5px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); 
    font-size: 14px; 
}

.cart-empty {
    text-align: center;
    padding: 10px;
    background-color: #FFF;
    border-radius: 5px;
    margin-top: 10px; 
    font-size: 16px; 
}

</style>


<div class="hero-wrap hero-bread" style="background-image: url('/static/user/images/bg_6.jpg');">
    <div class="container">
      <div class="row no-gutters slider-text align-items-center justify-content-center">
        <div class="col-md-9 ftco-animate text-center">
            <p class="breadcrumbs"><span class="mr-2"><a href="index.html">Home</a></span> <span>Checkout</span></p>
          <h1 class="mb-0 bread">Checkout</h1>
        </div>
      </div>
    </div>
  </div>

  <!-- address details -->

  <div class="container mt-5">
    <div class="row">
        <div class="col-md-12">
            <h3 class="mb-4">Address Details</h3>

            <% address.forEach(function(address, index) { %>
            <div class="card card-shadow d-none">
                <div class="underline">
                    <label for="checkbox-<%= index %>"></label>
                    <input type="checkbox" id="checkbox-<%= index %>" class="address-checkbox">
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        <label for="name" class="col-sm-2 col-form-label">Name</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="name"><%= address.name %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="mobile" class="col-sm-2 col-form-label">Mobile</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="mobile"><%= address.mobile %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="street" class="col-sm-2 col-form-label">Street</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="street"><%= address.street %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="city" class="col-sm-2 col-form-label">City</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="city"><%= address.city %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="state" class="col-sm-2 col-form-label">State</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="state"><%= address.state %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="zip" class="col-sm-2 col-form-label">Zip Code</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="zip"><%= address.zipcode %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="country" class="col-sm-2 col-form-label">Country</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="country"><%= address.country %></p>
                        </div>
                    </div>
                </div>
            </div>
            <% }); %>

            <!-- Button to toggle addresses -->
            <button type="button" id="toggleAddressesBtn" class="btn btn-primary mt-3">Show Addresses</button><br><br>
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addAddressModal">
              Add Address
            </button>
        </div>
    </div>
</div>

<!-- details ends -->

  <section class="ftco-section">
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-xl-8 ftco-animate">
                      <form action="#" class="billing-form">
                         
                <div class="row align-items-end">
                    <div class="col-md-6">
                  <div class="form-group">
            
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group">
               
                  </div>
              </div>
              <div class="w-100"></div>
                  <div class="col-md-12">
                      <div class="form-group">
                   
                          <div class="select-wrap">
                        <div class="icon"></div>
                        
                      </div>
                      </div>
                  </div>
                  <div class="w-100"></div>
                  <div class="col-md-6">
                     
                  </div>
                  </div>
                  <div class="col-md-6">
                      <div class="form-group">
                   
                  </div>
                  </div>
                  <div class="w-100"></div>
                  <div class="col-md-6">
                      <div class="form-group">
                     
                 
                  </div>
                  </div>
                  <div class="col-md-6">
                      <div class="form-group">
                      
               
                  </div>
                  </div>
                  <div class="w-100"></div>
                  <div class="col-md-6">
                  <div class="form-group">
                   
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group">
                   
                  </div>
              </div>
              <div class="w-100"></div>
              <div class="col-md-12">
                  <!-- <div class="form-group mt-4">
                                      <div class="radio">
                                        <label class="mr-3"><input type="radio" name="optradio"> Create an Account? </label>
                                        <label><input type="radio" name="optradio"> Ship to different address</label>
                                      </div>
                                  </div> -->
              </div>
              </div>
            </form><!-- END -->


            <div class="cart-section">
              <% if (cart && cart.products && cart.products.length > 0) { %>
                  <div class="cart-header">
                      <h4>Your Items</h4>
                  </div>
                  <div class="cart-items">
                      <ul>
                          <% cart.products.forEach(product => { %>
                              <li class="cart-item">
                                  <h6><%= product.productId.name %></h6>
                                  <p>Quantity: <%= product.quantity %></p>
                                  <p>Price: ₹<%= product.productId.price.toFixed(2) %></p>
                              </li>
                          <% }); %>
                      </ul>
                  </div>
              <% } else { %>
                  <div class="cart-empty">
                      <p>Your cart is empty.</p>
                  </div>
              <% } %>
          </div>



            <div class="row mt-5 pt-3 d-flex">
              <div class="col-md-6 d-flex">
                <div class="cart-detail cart-total bg-light p-3 p-md-4">
                    <h3 class="billing-heading mb-4">Cart Total</h3>
                    <p class="d-flex">
                        <span>Subtotal</span>
                        <span id="sub-total">₹subtotal </span>
                    </p>
                    <p class="d-flex">
                        <span>Delivery</span>
                        <span id="delivery">₹deliveryCharge</span>
                    </p>
                    <p class="d-flex">
                        <span>Discount</span>
                        <span id="discount-amount">₹ discountAmount </span>
                    </p>
                    <hr>
                    <p class="d-flex total-price">
                        <span>Total</span>
                        <span id="cart-total">₹total </span>
                    </p>
                </div>
            </div>
                <div class="col-md-6">
                    <div class="cart-detail bg-light p-3 p-md-4">
                        <h3 class="billing-heading mb-4">Payment Method</h3>
                               
                                  <div class="form-group">
                                      <div class="col-md-12">
                                          <div class="radio">
                                             <label><input type="radio" name="optradio" class="mr-2"> Cash on delivery</label>
                                          </div>
                                      </div>
                                  </div>
                                  <div class="form-group">
                                      <div class="col-md-12">
                                          <div class="radio">
                                             <label><input type="radio" name="optradio" class="mr-2"> Paypal</label>
                                          </div>
                                      </div>
                                  </div>
                                  <div class="form-group">
                                      <div class="col-md-12">
                                          <div class="checkbox">
                                             <label><input type="checkbox" value="" class="mr-2"> I have read and accept the terms and conditions</label>
                                          </div>
                                      </div>
                                  </div>
                                  <p><a href="#"class="btn btn-primary py-3 px-4">Place an order</a></p>
                              </div>
                </div>
            </div>
        </div> 
      </div>
    </div>
  </section> <!-- .section -->




  <footer class="ftco-footer bg-light ftco-section">
    <div class="container">
        <div class="row">
            <div class="mouse">
                      <a href="#" class="mouse-icon">
                          <div class="mouse-wheel"><span class="ion-ios-arrow-up"></span></div>
                      </a>
                  </div>
        </div>
      <div class="row mb-5">
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Winkel</h2>
            <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia.</p>
            <ul class="ftco-footer-social list-unstyled float-md-left float-lft mt-5">
              <li class="ftco-animate"><a href="#"><span class="icon-twitter"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-facebook"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-instagram"></span></a></li>
            </ul>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4 ml-md-5">
            <h2 class="ftco-heading-2">Menu</h2>
            <ul class="list-unstyled">
              <li><a href="#" class="py-2 d-block">Shop</a></li>
              <li><a href="#" class="py-2 d-block">About</a></li>
              <li><a href="#" class="py-2 d-block">Journal</a></li>
              <li><a href="#" class="py-2 d-block">Contact Us</a></li>
            </ul>
          </div>
        </div>
        <div class="col-md-4">
           <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Help</h2>
            <div class="d-flex">
                <ul class="list-unstyled mr-l-5 pr-l-3 mr-4">
                  <li><a href="#" class="py-2 d-block">Shipping Information</a></li>
                  <li><a href="#" class="py-2 d-block">Returns &amp; Exchange</a></li>
                  <li><a href="#" class="py-2 d-block">Terms &amp; Conditions</a></li>
                  <li><a href="#" class="py-2 d-block">Privacy Policy</a></li>
                </ul>
                <ul class="list-unstyled">
                  <li><a href="#" class="py-2 d-block">FAQs</a></li>
                  <li><a href="#" class="py-2 d-block">Contact</a></li>
                </ul>
              </div>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
              <h2 class="ftco-heading-2">Have a Questions?</h2>
              <div class="block-23 mb-3">
                <ul>
                  <li><span class="icon icon-map-marker"></span><span class="text">203 Fake St. Mountain View, San Francisco, California, USA</span></li>
                  <li><a href="#"><span class="icon icon-phone"></span><span class="text">+2 392 3929 210</span></a></li>
                  <li><a href="#"><span class="icon icon-envelope"></span><span class="text">info@yourdomain.com</span></a></li>
                </ul>
              </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12 text-center">

          <p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                        Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="icon-heart color-danger" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                      </p>
        </div>
      </div>
    </div>
  </footer>
  


<!-- loader -->
<div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px"><circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee"/><circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00"/></svg></div>

<!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form id="addAddressForm" action="/addAddressCheckout" method="POST">
        <div class="modal-body">
          <div class="form-group">
            <label for="name">Name</label>
            <input type="text" class="form-control" id="name" name="name">
            <span class="validation-message" id="nameValidation"></span>
          </div>
          <div class="form-group">
            <label for="mobile">Mobile</label>
            <input type="tel" class="form-control" id="mobile" name="mobile">
            <span class="validation-message" id="mobileValidation"></span>
          </div>
          <div class="form-group">
            <label for="street">Street</label>
            <input type="text" class="form-control" id="street" name="street">
            <span class="validation-message" id="streetValidation"></span>
          </div>
          <div class="form-group">
            <label for="city">City</label>
            <input type="text" class="form-control" id="city" name="city">
            <span class="validation-message" id="cityValidation"></span>
          </div>
          <div class="form-group">
            <label for="state">State</label>
            <input type="text" class="form-control" id="state" name="state">
            <span class="validation-message" id="stateValidation"></span>
          </div>
          <div class="form-group">
            <label for="zip">Zip Code</label>
            <input type="text" class="form-control" id="zip" name="zipcode">
            <span class="validation-message" id="zipValidation"></span>
          </div>
          <div class="form-group">
            <label for="country">Country</label>
            <input type="text" class="form-control" id="country" name="country">
            <span class="validation-message" id="countryValidation"></span>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>&nbsp;&nbsp;
          <button type="submit" class="btn btn-primary">Save Address</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<script>

function updateCartTotalFromLocalStorage() {
    // Retrieve values from localStorage
    let subtotal = parseFloat(localStorage.getItem('cartSubtotal')) || 0;
    let totalDiscount = parseFloat(localStorage.getItem('cartDiscount')) || 0;
    let deliveryCharge = parseFloat(localStorage.getItem('cartDelivery')) || 0;
    let total = parseFloat(localStorage.getItem('cartTotal')) || 0;

    // Update DOM elements
    document.getElementById('sub-total').textContent = `₹${subtotal.toFixed(2)}`;
    document.getElementById('delivery').textContent = `₹${deliveryCharge.toFixed(2)}`;
    document.getElementById('discount-amount').textContent = `₹${totalDiscount.toFixed(2)}`;
    document.getElementById('cart-total').textContent = `₹${total.toFixed(2)}`;
}

// Call the function to update the cart total initially
updateCartTotalFromLocalStorage();

</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('addAddressForm');

    if (form) {
      form.addEventListener('submit', function(event) {
        event.preventDefault();
        let isValid = true;

        const name = form.querySelector('#name');
        const mobile = form.querySelector('#mobile');
        const street = form.querySelector('#street');
        const city = form.querySelector('#city');
        const state = form.querySelector('#state');
        const zip = form.querySelector('#zip');
        const country = form.querySelector('#country');

        form.querySelectorAll('.validation-message').forEach(el => {
          el.textContent = ''; 
          el.style.display = 'none'; 
        });
        form.querySelectorAll('.form-control').forEach(el => el.classList.remove('is-invalid'));

        if (!name.value.trim() || name.value.startsWith(' ')) {
          name.classList.add('is-invalid');
          document.getElementById('nameValidation').textContent = 'Name is required';
          document.getElementById('nameValidation').style.display = 'block';
          isValid = false;
        }
        if (!mobile.value.trim() || !/^[1-9]\d{9}$/.test(mobile.value)) {
          mobile.classList.add('is-invalid');
          document.getElementById('mobileValidation').textContent = 'Invalid mobile number';
          document.getElementById('mobileValidation').style.display = 'block';
          isValid = false;
        }
        if (!street.value.trim()) {
          street.classList.add('is-invalid');
          document.getElementById('streetValidation').textContent = 'Street is required';
          document.getElementById('streetValidation').style.display = 'block';
          isValid = false;
        }
        if (!city.value.trim()) {
          city.classList.add('is-invalid');
          document.getElementById('cityValidation').textContent = 'City is required';
          document.getElementById('cityValidation').style.display = 'block';
          isValid = false;
        }
        if (!state.value.trim()) {
          state.classList.add('is-invalid');
          document.getElementById('stateValidation').textContent = 'State is required';
          document.getElementById('stateValidation').style.display = 'block';
          isValid = false;
        }
        if (!zip.value.trim() || !/^\d{6}$/.test(zip.value)) {
          zip.classList.add('is-invalid');
          document.getElementById('zipValidation').textContent = 'ZIP code must be exactly 6 digits';
          document.getElementById('zipValidation').style.display = 'block';
          isValid = false;
        }
        if (!country.value.trim()) {
          country.classList.add('is-invalid');
          document.getElementById('countryValidation').textContent = 'Country is required';
          document.getElementById('countryValidation').style.display = 'block';
          isValid = false;
        }

        if (isValid) {
      
          form.submit();
        }
      });
e
      form.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener('input', function() {
          const validationMessage = input.nextElementSibling;
          if (validationMessage.textContent) {
            validationMessage.textContent = '';
            validationMessage.style.display = 'none';
            input.classList.remove('is-invalid');
          }
        });
      });
    }
  });
</script>



<script>
  document.addEventListener('DOMContentLoaded', (event) => {
      const toggleAddressesBtn = document.getElementById('toggleAddressesBtn');
      const checkboxes = document.querySelectorAll('.address-checkbox');

      checkboxes.forEach(checkbox => {
          checkbox.checked = false;
          checkbox.disabled = true; 
      });

      if (toggleAddressesBtn) {
          toggleAddressesBtn.addEventListener('click', function() {
              const addresses = document.querySelectorAll('.card.card-shadow');
              addresses.forEach(address => {
                  address.classList.toggle('d-none');
              });

             
              checkboxes.forEach(checkbox => {
                  checkbox.disabled = false;
              });

              
              if (this.innerText === 'Show Addresses') {
                  this.innerText = 'Hide Addresses';
              } else {
                  this.innerText = 'Show Addresses';
               
                  checkboxes.forEach(checkbox => {
                      checkbox.checked = false;
                  });
              }
          });
      }

     
      checkboxes.forEach(checkbox => {
          checkbox.addEventListener('change', function() {
              if (this.checked) {
                  checkboxes.forEach(otherCheckbox => {
                      if (otherCheckbox !== this) {
                          otherCheckbox.checked = false;
                      }
                  });
              }
          });
      });
  });
</script>


<script src="/static/user/js/jquery.min.js"></script>
<script src="/static/user/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/user/js/popper.min.js"></script>
<script src="/static/user/js/bootstrap.min.js"></script>
<script src="/static/user/js/jquery.easing.1.3.js"></script>
<script src="/static/user/js/jquery.waypoints.min.js"></script>
<script src="/static/user/js/jquery.stellar.min.js"></script>
<script src="/static/user/js/owl.carousel.min.js"></script>
<script src="/static/user/js/jquery.magnific-popup.min.js"></script>
<script src="/static/user/js/aos.js"></script>
<script src="/static/user/js/jquery.animateNumber.min.js"></script>
<script src="/static/user/js/bootstrap-datepicker.js"></script>
<script src="/static/user/js/scrollax.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
<script src="/static/user/js/google-map.js"></script>
<script src="/static/user/js/main.js"></script>
  

<%-include ('./footer.ejs') %>






addtocart page 





<%-include ('./header.ejs') %>
<style>
   .input-group-prepend,
    .input-group-append {
        flex: 0 0 auto;
    }

    .quantity-decrease,
    .quantity-increase {
        width: 38px;
        height: 38px;
        font-size: 1rem;
    }

    .quantity {
        min-width: 100px; 
    }
    .thead-primary th {
        background-color: black;
        color: white;
    }



    #snackbar {
        visibility: hidden;
        min-width: 250px;
        margin-left: -125px;
        background: linear-gradient(to right, #b05200, #c93d3d); 
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 16px;
        position: fixed;
        z-index: 1;
        left: 50%;
        bottom: 30px;
    }


#snackbar.show {
  visibility: visible; 
  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
  animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

@-webkit-keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@-webkit-keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}

@keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}
</style>

<!-- breadcrumbs -->
<div class="breadcrumbs" >
    <div class="container">
        <div class="row">
            <div class="col">
                <p class="bread"><span><a href="/" style="color: rgb(142, 142, 142);text-decoration: none;">Home</a></span> / <span><a href="/productShop" style="color: rgb(142, 142, 142);text-decoration: none;">shop</a></span> / <span style="color: rgb(142, 142, 142);">Cart</span></p>
            </div>
        </div>
     </div>
  </div>

<section class="ftco-section ftco-cart">
    <div class="container">
        <div class="row">
            <div class="col-md-12 ftco-animate">
                <div class="cart-list" >
                    <table class="table">
                        <thead class="thead-primary text-white" style="background-color: black;">
                            <tr class="text-center">
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th class="text-white">Product</th>
                               
                                <th class="text-white">Price</th>
                                <th class="text-white">Discount</th>
                                <th class="text-white">Quantity</th>
                                <th class="text-white">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cart.products.forEach(item => { %>
                                <tr class="text-center product-row" data-product-id="<%= item.productId._id %>" data-stock="<%= item.productId.stock %>">
                                    <td class="product-remove">
                                        <a href="#" class="remove-product" data-product-id="<%= item.productId._id %>">
                                            <span class="ion-ios-close"></span>
                                        </a>
                                    </td>
                                    <td class="image-prod">
                                        <div class="img" style="background-image: url('<%= '/static/productimages/' + item.productId.image[0] %>');"></div>
                                    </td>
                                    <td class="product-name">
                                        <h3><%= item.productId.name %></h3>
                                        <p><%= item.productId.description %></p>
                                    </td>
                               
                                    <td class="price" >₹<%= item.productId.price.toFixed(2) %></td>
                                    <td class="discount"><del>₹<%= item.productId.discount.toFixed(2) %></del></td>
                                    <td class="quantity">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <button class="quantity-decrease btn btn-outline-secondary" type="button">-</button>
                                            </div>
                                            <input type="number" name="quantity" class="quantity-input form-control text-center" value="<%= item.quantity %>" min="1" max="100">
                                            <div class="input-group-append">
                                                <button class="quantity-increase btn btn-outline-secondary" type="button">+</button>
                                            </div>
                                        </div>
                                    </td>
                                    
                                    <td class="total">₹<%= (item.productId.price * item.quantity).toFixed(2) %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col col-lg-5 col-md-6 mt-5 cart-wrap ftco-animate">
                <div class="cart-total mb-3">
                    <h3>Cart Totals</h3>
                    <p class="d-flex">
                        <span>Subtotal</span>
                        <span id="sub-total">$20.60</span>
                    </p>
                    <p class="d-flex">
                        <span>Delivery</span>
                        <span id="delivery">₹0.00</span>
                    </p>
                    <p class="d-flex">
                        <span>Discount</span>
                        <span id="discount-amount">₹0.00</span>
                    </p>
                    <hr>
                    <p class="d-flex total-price">
                        <span>Total</span>
                        <span id="cart-total">$0.00</span>
                    </p>
                </div>
                <p class="text-center"><a href="/checkout" class="btn btn-primary py-3 px-4">Proceed to Checkout</a></p>
            </div>
        </div>
    </div>
</section>

  <footer class="ftco-footer bg-light ftco-section">
    <div class="container">
        <div class="row">
            <div class="mouse">
                      <a href="#" class="mouse-icon">
                          <div class="mouse-wheel"><span class="ion-ios-arrow-up"></span></div>
                      </a>
                  </div>
        </div>
      <div class="row mb-5">
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Winkel</h2>
            <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia.</p>
            <ul class="ftco-footer-social list-unstyled float-md-left float-lft mt-5">
              <li class="ftco-animate"><a href="#"><span class="icon-twitter"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-facebook"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-instagram"></span></a></li>
            </ul>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4 ml-md-5">
            <h2 class="ftco-heading-2">Menu</h2>
            <ul class="list-unstyled">
              <li><a href="#" class="py-2 d-block">Shop</a></li>
              <li><a href="#" class="py-2 d-block">About</a></li>
              <li><a href="#" class="py-2 d-block">Journal</a></li>
              <li><a href="#" class="py-2 d-block">Contact Us</a></li>
            </ul>
          </div>
        </div>
        <div class="col-md-4">
           <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Help</h2>
            <div class="d-flex">
                <ul class="list-unstyled mr-l-5 pr-l-3 mr-4">
                  <li><a href="#" class="py-2 d-block">Shipping Information</a></li>
                  <li><a href="#" class="py-2 d-block">Returns &amp; Exchange</a></li>
                  <li><a href="#" class="py-2 d-block">Terms &amp; Conditions</a></li>
                  <li><a href="#" class="py-2 d-block">Privacy Policy</a></li>
                </ul>
                <ul class="list-unstyled">
                  <li><a href="#" class="py-2 d-block">FAQs</a></li>
                  <li><a href="#" class="py-2 d-block">Contact</a></li>
                </ul>
              </div>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
              <h2 class="ftco-heading-2">Have a Questions?</h2>
              <div class="block-23 mb-3">
                <ul>
                  <li><span class="icon icon-map-marker"></span><span class="text">203 Fake St. Mountain View, San Francisco, California, USA</span></li>
                  <li><a href="#"><span class="icon icon-phone"></span><span class="text">+2 392 3929 210</span></a></li>
                  <li><a href="#"><span class="icon icon-envelope"></span><span class="text">info@yourdomain.com</span></a></li>
                </ul>
              </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12 text-center">

                       <p>
                        Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="icon-heart color-danger" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                       </p>
        </div>
      </div>
    </div>
  </footer>
  




<!-- loader -->
<div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px"><circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee"/><circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00"/></svg></div>
<div id="snackbar"></div>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>



<script>
    document.addEventListener('DOMContentLoaded', function () {
        let productRows = document.querySelectorAll('.product-row');
        const subtotalElement = document.getElementById('sub-total');
        const deliveryElement = document.getElementById('delivery');
        const totalElement = document.getElementById('cart-total');
        const discountAmountElement = document.getElementById('discount-amount');
        let deliveryCharge = 0;

        function updateTotal(row) {
            const quantityInput = row.querySelector('.quantity-input');
            const price = parseFloat(row.querySelector('.price').textContent.replace('₹', ''));
            const discount = parseFloat(row.querySelector('.discount del').textContent.replace('₹', ''));
            const quantity = parseInt(quantityInput.value);
            const totalCell = row.querySelector('.total');
            const total = ((price - discount) * quantity).toFixed(2); 
            if (totalCell) {
                totalCell.textContent = `₹${total}`;
            }
        }

        function updateSubtotal() {
    let subtotal = 0;
    let totalDiscount = 0;

   
    productRows.forEach(function (row) {
        const price = parseFloat(row.querySelector('.price').textContent.replace('₹', ''));
        const discount = parseFloat(row.querySelector('.discount del').textContent.replace('₹', ''));
        const quantity = parseInt(row.querySelector('.quantity-input').value);

        subtotal += price * quantity; 
        totalDiscount += (discount * quantity); 
    });

    subtotalElement.textContent = `₹${subtotal.toFixed(2)}`;
    discountAmountElement.textContent = `₹${totalDiscount.toFixed(2)}`;

  
    if (subtotal < 500 && subtotal !== 0) {
        deliveryCharge = 40;
    } else {
        deliveryCharge = 0;
    }
    deliveryElement.textContent = `₹${deliveryCharge.toFixed(2)}`;


    const total = subtotal + deliveryCharge - totalDiscount;
    totalElement.textContent = `₹${total.toFixed(2)}`;

    localStorage.setItem('cartSubtotal', subtotal.toFixed(2));
    localStorage.setItem('cartDiscount', totalDiscount.toFixed(2));
    localStorage.setItem('cartDelivery', deliveryCharge.toFixed(2));
    localStorage.setItem('cartTotal', total.toFixed(2));
}
        productRows.forEach(function (row) {
            updateTotal(row); 
        });
        updateSubtotal(); 
        productRows.forEach(function (row) {
            const decreaseButton = row.querySelector('.quantity-decrease');
            const increaseButton = row.querySelector('.quantity-increase');
            const quantityInput = row.querySelector('.quantity-input');
            const stock = parseInt(row.getAttribute('data-stock'));

            decreaseButton.addEventListener('click', function () {
                let currentValue = parseInt(quantityInput.value);
                if (currentValue > parseInt(quantityInput.min)) {
                    quantityInput.value = currentValue - 1;
                    updateTotal(row);
                    updateSubtotal();
                }
            });

            increaseButton.addEventListener('click', function () {
                let currentQuantity = parseInt(quantityInput.value);
                if (currentQuantity < stock) {
                    quantityInput.value = currentQuantity + 1;
                    updateTotal(row);
                    updateSubtotal();
                }
            });

            quantityInput.addEventListener('input', function () {
                updateTotal(row);
                updateSubtotal();
            });
        });

       
        function showsnackbar(text) {
            const snackbar = document.getElementById("snackbar");
            if (snackbar) {
                snackbar.innerHTML = text;
                snackbar.classList.add('show');
                setTimeout(function () {
                    snackbar.classList.remove('show');
                }, 3000);
            }
        }

        const removeButtons = document.querySelectorAll('.remove-product');
        removeButtons.forEach(button => {
            button.addEventListener('click', async function (event) {
                event.preventDefault();
                const productId = this.getAttribute('data-product-id');

                try {
                    const response = await fetch(`/removeFromCart/${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    });

                    if (!response.ok) {
                        throw new Error('Failed to remove product from cart');
                    }

                    const data = await response.json();

                    if (data.success === true) {
                        showsnackbar('Product has been removed');
                        const rowToRemove = this.closest('tr');
                        rowToRemove.remove(); 
                        productRows = document.querySelectorAll('.product-row'); 
                        updateSubtotal(); 
                    } else {
                        throw new Error('Failed to remove product from cart');
                    }
                } catch (error) {
                    console.error('Error removing product from cart:', error);
                    showsnackbar('Error occurred');
                }
            });
        });
    });


    

    
    document.addEventListener('DOMContentLoaded', function () {
    
    const quantityInputs = document.querySelectorAll('.quantity-input');

    quantityInputs.forEach(input => {
        input.addEventListener('change', function() {
            const productId = input.dataset.productId;
            const quantity = parseInt(input.value);

            updateCartQuantity(productId, quantity);
        });
    });
});

function updateCartQuantity(productId, quantity) {
    fetch('/updateCartQuantity', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ productId, quantity })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            console.log('Cart quantity updated successfully.');
        } else {
            console.error('Failed to update cart quantity:', data.message);
        }
    })
    .catch(error => {
        console.error('Error updating cart quantity:', error);
    });
}


</script>



<script src="/static/user/js/jquery.min.js"></script>
<script src="/static/user/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/user/js/popper.min.js"></script>
<script src="/static/user/js/bootstrap.min.js"></script>
<script src="/static/user/js/jquery.easing.1.3.js"></script>
<script src="/static/user/js/jquery.waypoints.min.js"></script>
<script src="/static/user/js/jquery.stellar.min.js"></script>
<script src="/static/user/js/owl.carousel.min.js"></script>
<script src="/static/user/js/jquery.magnific-popup.min.js"></script>
<script src="/static/user/js/aos.js"></script>
<script src="/static/user/js/jquery.animateNumber.min.js"></script>
<script src="/static/user/js/bootstrap-datepicker.js"></script>
<script src="/static/user/js/scrollax.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
<script src="/static/user/js/google-map.js"></script>
<script src="/static/user/js/main.js"></script>


<%- include('./footer.ejs') %>



productShop page 

<%- include('./header.ejs') %>


<div class="hero-wrap hero-bread" style="background-image: url('/static/user/images/bg_6.jpg');">
  <div class="container">
    <div class="row no-gutters slider-text align-items-center justify-content-center">
      <div class="col-md-9 ftco-animate text-center">
          <p class="breadcrumbs"><span class="mr-2"><a href="index.html" style="text-decoration: none;" !important>Home</a></span> <span>Products</span></p>
        <h1 class="mb-0 bread">Product Shop</h1>
      </div>
    </div>
  </div>
</div>


<div class="breadcrumbs" >
  <div class="container">
      <div class="row">
          <div class="col">
              <p class="bread"><span><a href="/" style="color: rgb(142, 142, 142);text-decoration: none;">Home</a></span> / <span style="color: rgb(142, 142, 142);">Product Shop</span></p>
          </div>
      </div>
   </div>
</div>

<section class="ftco-section bg-light">
    <div class="container">
     
        <div class="row">
            <div class="col-md-8 col-lg-10 order-md-last">
                
                <div class="row">
                    <% for (let i=0; i<product.length; i++){ %>
                    <div class="col-sm-6 col-md-6 col-lg-4 ftco-animate">
                       
                        <div class="product">
                            <a href="/productDetails?id=<%= product[i]._id %>" class="img-prod"><img class="img-fluid" src="/static/productImages/<%= product[i].image[0] %>" alt="Colorlib Template">
                            
                                <div class="overlay"></div>
                            </a>
                            <div class="text py-3 px-3">
                                <h3><a href="#" style="text-decoration: none !important;"><%= product[i].name%></a></h3>
                                <div class="d-flex">
                                    <div class="pricing">
                                      <p class="price"><del><span class="price-sale">₹<%= product[i].price %></span></del>&nbsp;&nbsp;<span class="price-sale">₹<%= product[i].price - product[i].discount%></span></p>
                                   
                                    </div>
                                  
                                </div>
                                
                                <!-- <p class="bottom-area d-flex px-3">
                                    <a href="#" class="add-to-cart text-center py-2 mr-1" style="text-decoration: none !important;"><span>Add to cart <i class="ion-ios-add ml-1"></i></span></a>
                                    <a href="#" class="buy-now text-center py-2" style="text-decoration: none !important;">Buy now<span><i class="ion-ios-cart ml-1"></i></span></a>
                                </p> -->
                                <div class="pricing" style="width: 100%;">
                                    <h6 class="price" style="color: rgb(76, 75, 75);"><span class="price-sale"><%= product[i].discription%></span></h6>
                                </div>
                            </div>
                           
                        </div>
                       
                    </div>
                    <%}%>
                  
                  
                </div>
                <div class="row mt-5">
              <div class="col text-center">
                <div class="block-27">
                  <ul>
                    <li><a href="#" style="text-decoration: none !important;">&lt;</a></li>
                    <li class="active" style="text-decoration: none !important;"><span>1</span></li>
                    <li><a href="#" style="text-decoration: none !important;">2</a></li>
                    <li><a href="#" style="text-decoration: none !important;">3</a></li>
                    <li><a href="#" style="text-decoration: none !important;">4</a></li>
                    <li><a href="#" style="text-decoration: none !important;">5</a></li>
                    <li><a href="#" style="text-decoration: none !important;">&gt;</a></li>
                  </ul>
                </div>
              </div>
            </div>
            </div>

            <div class="col-md-4 col-lg-2 sidebar">
                <div class="sidebar-box-2">
                    <h2 class="heading mb-4"><a href="#" style="text-decoration: none !important;">Category</a></h2>
                    <ul>
                        <li><a href="#" style="text-decoration: none !important;">Leather &amp; cotton</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Full black bags</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Sling bags &amp; purse</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Tote bags</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Clutch purse</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Shoulder bags</a></li>
                    </ul>
                </div>
                <div class="sidebar-box-2">
                    <h2 class="heading mb-4"><a href="#" style="text-decoration: none !important;">Brands</a></h2>
                    <ul>
                        <li><a href="#" style="text-decoration: none !important;">Lavie</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Baggit</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Gucci</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Fendi</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Louis Vuitton</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Chanel</a></li>
                            <li><a href="#" style="text-decoration: none !important;">Prada</a></li>
                    </ul>
                </div>
                <div class="sidebar-box-2">
                    <h2 class="heading mb-2"><a href="#" style="text-decoration: none !important;">Bags</a></h2>
                    <h2 class="heading mb-2"><a href="#" style="text-decoration: none !important;">Accessories</a></h2>
                </div>
                <div class="sidebar-box-2">
                  <h2 class="heading mb-4"><a href="#" style="text-decoration: none !important;">Price Filter</a></h2>
                  <ul>
                      <li><a href="#" style="text-decoration: none !important;">Under ₹800</a></li>
                      <li><a href="#" style="text-decoration: none !important;">₹800 - ₹1200</a></li>
                      <li><a href="#" style="text-decoration: none !important;">₹1200 - ₹1800</a></li>
                      <li><a href="#" style="text-decoration: none !important;">₹1800 - ₹2500</a></li>
                      <li><a href="#" style="text-decoration: none !important;">₹2500 - ₹3000</a></li>
                      <li><a href="#" style="text-decoration: none !important;">Above ₹3000</a></li>
                  </ul>
              </div>
              
            </div>
        </div>
    </div>
</section>

<footer class="ftco-footer bg-light ftco-section">
  <div class="container">
      <div class="row">
          <div class="mouse">
                    <a href="#" class="mouse-icon">
                        <div class="mouse-wheel"><span class="ion-ios-arrow-up"></span></div>
                    </a>
                </div>
      </div>
    <div class="row mb-5">
      <div class="col-md">
        <div class="ftco-footer-widget mb-4">
          <h2 class="ftco-heading-2">Winkel</h2>
          <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia.</p>
          <ul class="ftco-footer-social list-unstyled float-md-left float-lft mt-5">
            <li class="ftco-animate"><a href="#"><span class="icon-twitter"></span></a></li>
            <li class="ftco-animate"><a href="#"><span class="icon-facebook"></span></a></li>
            <li class="ftco-animate"><a href="#"><span class="icon-instagram"></span></a></li>
          </ul>
        </div>
      </div>
      <div class="col-md">
        <div class="ftco-footer-widget mb-4 ml-md-5">
          <h2 class="ftco-heading-2">Menu</h2>
          <ul class="list-unstyled">
            <li><a href="#" class="py-2 d-block">Shop</a></li>
            <li><a href="#" class="py-2 d-block">About</a></li>
            <li><a href="#" class="py-2 d-block">Journal</a></li>
            <li><a href="#" class="py-2 d-block">Contact Us</a></li>
          </ul>
        </div>
      </div>
      <div class="col-md-4">
         <div class="ftco-footer-widget mb-4">
          <h2 class="ftco-heading-2">Help</h2>
          <div class="d-flex">
              <ul class="list-unstyled mr-l-5 pr-l-3 mr-4">
                <li><a href="#" class="py-2 d-block">Shipping Information</a></li>
                <li><a href="#" class="py-2 d-block">Returns &amp; Exchange</a></li>
                <li><a href="#" class="py-2 d-block">Terms &amp; Conditions</a></li>
                <li><a href="#" class="py-2 d-block">Privacy Policy</a></li>
              </ul>
              <ul class="list-unstyled">
                <li><a href="#" class="py-2 d-block">FAQs</a></li>
                <li><a href="#" class="py-2 d-block">Contact</a></li>
              </ul>
            </div>
        </div>
      </div>
      <div class="col-md">  
        <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Have a Questions?</h2>
            <div class="block-23 mb-3">
              <ul>
                <li><span class="icon icon-map-marker"></span><span class="text">203 Fake St. Mountain View, San Francisco, California, USA</span></li>
                <li><a href="#"><span class="icon icon-phone"></span><span class="text">+2 392 3929 210</span></a></li>
                <li><a href="#"><span class="icon icon-envelope"></span><span class="text">info@yourdomain.com</span></a></li>
              </ul>
            </div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12 text-center">

        <p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                      Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="icon-heart color-danger" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                      <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                    </p>
      </div>
    </div>
  </div>
</footer>



<!-- loader -->
<div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px"><circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee"/><circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00"/></svg></div>


<script src="/static/user/js/jquery.min.js"></script>
<script src="/static/user/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/user/js/popper.min.js"></script>
<script src="/static/user/js/bootstrap.min.js"></script>
<script src="/static/user/js/jquery.easing.1.3.js"></script>
<script src="/static/user/js/jquery.waypoints.min.js"></script>
<script src="/static/user/js/jquery.stellar.min.js"></script>
<script src="/static/user/js/owl.carousel.min.js"></script>
<script src="/static/user/js/jquery.magnific-popup.min.js"></script>
<script src="/static/user/js/aos.js"></script>
<script src="/static/user/js/jquery.animateNumber.min.js"></script>
<script src="/static/user/js/bootstrap-datepicker.js"></script>
<script src="/static/user/js/scrollax.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
<script src="/static/user/js/google-map.js"></script>
<script src="/static/user/js/main.js"></script>

<%- include('./footer.ejs') %>


checkout page


<%-include ('./header.ejs') %>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<style>
  .validation-message {
    color: red;
    font-size: 0.875em;
  }


  #snackbar {
  visibility: hidden;
  min-width: 250px;
  margin-left: -125px;
  background: linear-gradient(to right, #51a3c1, #255361); 
  color: #fff;
  text-align: center;
  border-radius: 2px;
  position: fixed;
  z-index: 1;
  left: 50%;
  bottom: 30px;
  font-size: 17px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.5);
  padding: 16px;
}

/* Snackbar Show Class */
#snackbar.show {
  visibility: visible;
  -webkit-animation: fadeIn 0.5s, fadeOut 0.5s 4.5s;
  animation: fadeIn 0.5s, fadeOut 0.5s 4.5s;
}

/* Animations */
@-webkit-keyframes fadeIn {
  from { bottom: 0; opacity: 0; }
  to { bottom: 30px; opacity: 1; }
}

@keyframes fadeIn {
  from { bottom: 0; opacity: 0; }
  to { bottom: 30px; opacity: 1; }
}

@-webkit-keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
} 
</style>
<style>
  .card-shadow {
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      border: 1px solid #ddd;
  }
  .card-body {
      padding: 0.5rem 1rem;
  }
  .underline {
            border-bottom: 1px solid #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 1rem;
        }

        .card.card-shadow {
    margin-bottom: 20px;
}




.cart-section {
    background-color: #eeeeee; 
    padding: 8px; 
    border-radius: 8px;
    margin-top: 20px;
    width: 50%; 
    margin: 0 auto; 
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); 
}

.cart-header {
    text-align: center;
    margin-bottom: 5px;
    font-size: 18px;
}

.cart-items ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.cart-item {
    background-color: #FFF;
    padding: 6px; 
    margin-bottom: 6px; 
    border-radius: 5px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); 
    font-size: 14px; 
}

.cart-empty {
    text-align: center;
    padding: 10px;
    background-color: #FFF;
    border-radius: 5px;
    margin-top: 10px; 
    font-size: 16px; 
}

</style>


<div class="hero-wrap hero-bread" style="background-image: url('/static/user/images/bg_6.jpg');">
    <div class="container">
      <div class="row no-gutters slider-text align-items-center justify-content-center">
        <div class="col-md-9 ftco-animate text-center">
            <p class="breadcrumbs"><span class="mr-2"><a href="index.html">Home</a></span> <span>Checkout</span></p>
          <h1 class="mb-0 bread">Checkout</h1>
        </div>
      </div>
    </div>
  </div>

  <!-- address details -->

  <div class="container mt-5">
    <div class="row">
        <div class="col-md-12">
            <h3 class="mb-4">Address Details</h3>

            <% address.forEach(function(address, index) { %>
            <div class="card card-shadow d-none">
                <div class="underline">
                    <label for="checkbox-<%= index %>"></label>
                    <input type="checkbox" id="checkbox-<%= index %>" class="address-checkbox" value="<%= address._id %>">
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        <label for="name" class="col-sm-2 col-form-label">Name</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="name"><%= address.name %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="mobile" class="col-sm-2 col-form-label">Mobile</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="mobile"><%= address.mobile %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="street" class="col-sm-2 col-form-label">Street</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="street"><%= address.street %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="city" class="col-sm-2 col-form-label">City</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="city"><%= address.city %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="state" class="col-sm-2 col-form-label">State</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="state"><%= address.state %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="zip" class="col-sm-2 col-form-label">Zip Code</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="zip"><%= address.zipcode %></p>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="country" class="col-sm-2 col-form-label">Country</label>
                        <div class="col-sm-10">
                            <p class="form-control-plaintext" id="country"><%= address.country %></p>
                        </div>
                    </div>
                </div>
            </div>
            <% }); %>

            <!-- Button to toggle addresses -->
            <button type="button" id="toggleAddressesBtn" class="btn btn-primary mt-3">Show Addresses</button><br><br>
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addAddressModal">
              Add Address
            </button>
        </div>
    </div>
</div>

<!-- details ends -->

  <section class="ftco-section">
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-xl-8 ftco-animate">
                      <form action="#" class="billing-form">
                         
                <div class="row align-items-end">
                    <div class="col-md-6">
                  <div class="form-group">
            
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group">
               
                  </div>
              </div>
              <div class="w-100"></div>
                  <div class="col-md-12">
                      <div class="form-group">
                   
                          <div class="select-wrap">
                        <div class="icon"></div>
                        
                      </div>
                      </div>
                  </div>
                  <div class="w-100"></div>
                  <div class="col-md-6">
                     
                  </div>
                  </div>
                  <div class="col-md-6">
                      <div class="form-group">
                   
                  </div>
                  </div>
                  <div class="w-100"></div>
                  <div class="col-md-6">
                      <div class="form-group">
                     
                 
                  </div>
                  </div>
                  <div class="col-md-6">
                      <div class="form-group">
                      
               
                  </div>
                  </div>
                  <div class="w-100"></div>
                  <div class="col-md-6">
                  <div class="form-group">
                   
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group">
                   
                  </div>
              </div>
              <div class="w-100"></div>
              <div class="col-md-12">
                  <!-- <div class="form-group mt-4">
                                      <div class="radio">
                                        <label class="mr-3"><input type="radio" name="optradio"> Create an Account? </label>
                                        <label><input type="radio" name="optradio"> Ship to different address</label>
                                      </div>
                                  </div> -->
              </div>
              </div>
            </form><!-- END -->


            <div class="cart-section">
              <% if (cart && cart.products && cart.products.length > 0) { %>
                  <div class="cart-header">
                      <h4>Your Items</h4>
                  </div>
                  <div class="cart-items">
                      <ul>
                          <% cart.products.forEach(product => { %>
                              <li class="cart-item">
                                  <h6><%= product.productId.name %></h6>
                                  
                                  <p>Price: ₹<%= product.productId.price.toFixed(2) %></p>
                                  <p>Quantity: <%= product.quantity %> </p>
                              </li>
                          <% }); %>
                      </ul>
                  </div>
              <% } else { %>
                  <div class="cart-empty">
                      <p>Your cart is empty.</p>
                  </div>
              <% } %>
          </div>



            <div class="row mt-5 pt-3 d-flex">
              <div class="col-md-6 d-flex">
                <div class="cart-detail cart-total bg-light p-3 p-md-4">
                    <h3 class="billing-heading mb-4">Cart Total</h3>
                    <p class="d-flex">
                        <span>Subtotal</span>
                        <span id="sub-total">₹subtotal </span>
                    </p>
                    <p class="d-flex">
                        <span>Delivery</span>
                        <span id="delivery">₹deliveryCharge</span>
                    </p>
                    <p class="d-flex">
                        <span>Discount</span>
                        <span id="discount-amount">₹ discountAmount </span>
                    </p>
                    <hr>
                    <p class="d-flex total-price">
                        <span>Total</span>
                        <span id="cart-total">₹total </span>
                    </p>
                </div>
            </div>
                <div class="col-md-6">
                    <div class="cart-detail bg-light p-3 p-md-4">
                        <h3 class="billing-heading mb-4">Payment Method</h3>
                               
                                  <div class="form-group">
                                      <div class="col-md-12">
                                          <div class="radio">
                                             <label><input type="radio" name="optradio" class="mr-2" value="Cash on delivery"> Cash on delivery</label>
                                          </div>
                                      </div>
                                  </div>
                                  <div class="form-group">
                                      <div class="col-md-12">
                                          <div class="radio">
                                             <label><input type="radio" name="optradio" class="mr-2" value="PayPal"> Paypal</label>
                                          </div>
                                      </div>
                                  </div>
                                  <div class="form-group">
                                      <div class="col-md-12">
                                         
                                      </div>
                                  </div>
                                  <p><a href="#" id="placeOrderBtn" class="btn btn-primary py-3 px-4">Place an order</a></p>
                              </div>
                </div>
            </div>
        </div> 
      </div>
    </div>
  </section> <!-- .section -->




  <footer class="ftco-footer bg-light ftco-section">
    <div class="container">
        <div class="row">
            <div class="mouse">
                      <a href="#" class="mouse-icon">
                          <div class="mouse-wheel"><span class="ion-ios-arrow-up"></span></div>
                      </a>
                  </div>
        </div>
      <div class="row mb-5">
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Winkel</h2>
            <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia.</p>
            <ul class="ftco-footer-social list-unstyled float-md-left float-lft mt-5">
              <li class="ftco-animate"><a href="#"><span class="icon-twitter"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-facebook"></span></a></li>
              <li class="ftco-animate"><a href="#"><span class="icon-instagram"></span></a></li>
            </ul>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4 ml-md-5">
            <h2 class="ftco-heading-2">Menu</h2>
            <ul class="list-unstyled">
              <li><a href="#" class="py-2 d-block">Shop</a></li>
              <li><a href="#" class="py-2 d-block">About</a></li>
              <li><a href="#" class="py-2 d-block">Journal</a></li>
              <li><a href="#" class="py-2 d-block">Contact Us</a></li>
            </ul>
          </div>
        </div>
        <div class="col-md-4">
           <div class="ftco-footer-widget mb-4">
            <h2 class="ftco-heading-2">Help</h2>
            <div class="d-flex">
                <ul class="list-unstyled mr-l-5 pr-l-3 mr-4">
                  <li><a href="#" class="py-2 d-block">Shipping Information</a></li>
                  <li><a href="#" class="py-2 d-block">Returns &amp; Exchange</a></li>
                  <li><a href="#" class="py-2 d-block">Terms &amp; Conditions</a></li>
                  <li><a href="#" class="py-2 d-block">Privacy Policy</a></li>
                </ul>
                <ul class="list-unstyled">
                  <li><a href="#" class="py-2 d-block">FAQs</a></li>
                  <li><a href="#" class="py-2 d-block">Contact</a></li>
                </ul>
              </div>
          </div>
        </div>
        <div class="col-md">
          <div class="ftco-footer-widget mb-4">
              <h2 class="ftco-heading-2">Have a Questions?</h2>
              <div class="block-23 mb-3">
                <ul>
                  <li><span class="icon icon-map-marker"></span><span class="text">203 Fake St. Mountain View, San Francisco, California, USA</span></li>
                  <li><a href="#"><span class="icon icon-phone"></span><span class="text">+2 392 3929 210</span></a></li>
                  <li><a href="#"><span class="icon icon-envelope"></span><span class="text">info@yourdomain.com</span></a></li>
                </ul>
              </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12 text-center">

          <p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                        Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="icon-heart color-danger" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                      </p>
        </div>
      </div>
    </div>
  </footer>
  


<!-- loader -->
<div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px"><circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee"/><circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00"/></svg></div>

<!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form id="addAddressForm" action="/addAddressCheckout" method="POST">
        <div class="modal-body">
          <div class="form-group">
            <label for="name">Name</label>
            <input type="text" class="form-control" id="name" name="name">
            <span class="validation-message" id="nameValidation"></span>
          </div>
          <div class="form-group">
            <label for="mobile">Mobile</label>
            <input type="tel" class="form-control" id="mobile" name="mobile">
            <span class="validation-message" id="mobileValidation"></span>
          </div>
          <div class="form-group">
            <label for="street">Street</label>
            <input type="text" class="form-control" id="street" name="street">
            <span class="validation-message" id="streetValidation"></span>
          </div>
          <div class="form-group">
            <label for="city">City</label>
            <input type="text" class="form-control" id="city" name="city">
            <span class="validation-message" id="cityValidation"></span>
          </div>
          <div class="form-group">
            <label for="state">State</label>
            <input type="text" class="form-control" id="state" name="state">
            <span class="validation-message" id="stateValidation"></span>
          </div>
          <div class="form-group">
            <label for="zip">Zip Code</label>
            <input type="text" class="form-control" id="zip" name="zipcode">
            <span class="validation-message" id="zipValidation"></span>
          </div>
          <div class="form-group">
            <label for="country">Country</label>
            <input type="text" class="form-control" id="country" name="country">
            <span class="validation-message" id="countryValidation"></span>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>&nbsp;&nbsp;
          <button type="submit" class="btn btn-primary">Save Address</button>
        </div>
      </form>
    </div>
  </div>
</div>
<div id="snackbar"></div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<script>

function updateCartTotalFromLocalStorage() {
    let subtotal = parseFloat(localStorage.getItem('cartSubtotal')) || 0;
    let totalDiscount = parseFloat(localStorage.getItem('cartDiscount')) || 0;
    let deliveryCharge = parseFloat(localStorage.getItem('cartDelivery')) || 0;
    let total = parseFloat(localStorage.getItem('cartTotal')) || 0;

    document.getElementById('sub-total').textContent = `₹${subtotal.toFixed(2)}`;
    document.getElementById('delivery').textContent = `₹${deliveryCharge.toFixed(2)}`;
    document.getElementById('discount-amount').textContent = `₹${totalDiscount.toFixed(2)}`;
    document.getElementById('cart-total').textContent = `₹${total.toFixed(2)}`;
}
  
updateCartTotalFromLocalStorage();

</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('addAddressForm');

    if (form) {
      form.addEventListener('submit', function(event) {
        event.preventDefault();
        let isValid = true;

        const name = form.querySelector('#name');
        const mobile = form.querySelector('#mobile');
        const street = form.querySelector('#street');
        const city = form.querySelector('#city');
        const state = form.querySelector('#state');
        const zip = form.querySelector('#zip');
        const country = form.querySelector('#country');

        form.querySelectorAll('.validation-message').forEach(el => {
          el.textContent = ''; 
          el.style.display = 'none'; 
        });
        form.querySelectorAll('.form-control').forEach(el => el.classList.remove('is-invalid'));

        if (!name.value.trim() || name.value.startsWith(' ')) {
          name.classList.add('is-invalid');
          document.getElementById('nameValidation').textContent = 'Name is required';
          document.getElementById('nameValidation').style.display = 'block';
          isValid = false;
        }
        if (!mobile.value.trim() || !/^[1-9]\d{9}$/.test(mobile.value)) {
          mobile.classList.add('is-invalid');
          document.getElementById('mobileValidation').textContent = 'Invalid mobile number';
          document.getElementById('mobileValidation').style.display = 'block';
          isValid = false;
        }
        if (!street.value.trim()) {
          street.classList.add('is-invalid');
          document.getElementById('streetValidation').textContent = 'Street is required';
          document.getElementById('streetValidation').style.display = 'block';
          isValid = false;
        }
        if (!city.value.trim()) {
          city.classList.add('is-invalid');
          document.getElementById('cityValidation').textContent = 'City is required';
          document.getElementById('cityValidation').style.display = 'block';
          isValid = false;
        }
        if (!state.value.trim()) {
          state.classList.add('is-invalid');
          document.getElementById('stateValidation').textContent = 'State is required';
          document.getElementById('stateValidation').style.display = 'block';
          isValid = false;
        }
        if (!zip.value.trim() || !/^\d{6}$/.test(zip.value)) {
          zip.classList.add('is-invalid');
          document.getElementById('zipValidation').textContent = 'ZIP code must be exactly 6 digits';
          document.getElementById('zipValidation').style.display = 'block';
          isValid = false;
        }
        if (!country.value.trim()) {
          country.classList.add('is-invalid');
          document.getElementById('countryValidation').textContent = 'Country is required';
          document.getElementById('countryValidation').style.display = 'block';
          isValid = false;
        }

        if (isValid) {
      
          form.submit();
        }
      });
e
      form.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener('input', function() {
          const validationMessage = input.nextElementSibling;
          if (validationMessage.textContent) {
            validationMessage.textContent = '';
            validationMessage.style.display = 'none';
            input.classList.remove('is-invalid');
          }
        });
      });
    }
  });
</script>



<script>
  document.addEventListener('DOMContentLoaded', (event) => {
      const toggleAddressesBtn = document.getElementById('toggleAddressesBtn');
      const checkboxes = document.querySelectorAll('.address-checkbox');

      checkboxes.forEach(checkbox => {
          checkbox.checked = false;
          checkbox.disabled = true; 
      });

      if (toggleAddressesBtn) {
          toggleAddressesBtn.addEventListener('click', function() {
              const addresses = document.querySelectorAll('.card.card-shadow');
              addresses.forEach(address => {
                  address.classList.toggle('d-none');
              });

             
              checkboxes.forEach(checkbox => {
                  checkbox.disabled = false;
              });

              
              if (this.innerText === 'Show Addresses') {
                  this.innerText = 'Hide Addresses';
              } else {
                  this.innerText = 'Show Addresses';
               
                  checkboxes.forEach(checkbox => {
                      checkbox.checked = false;
                  });
              }
          });
      }

     
      checkboxes.forEach(checkbox => {
          checkbox.addEventListener('change', function() {
              if (this.checked) {
                  checkboxes.forEach(otherCheckbox => {
                      if (otherCheckbox !== this) {
                          otherCheckbox.checked = false;
                      }
                  });
              }
          });
      });
  });
</script>



<script>
  document.addEventListener('DOMContentLoaded', function() {
      const placeOrderBtn = document.getElementById('placeOrderBtn');
  
      function showSnackbar(message, backgroundColor) {
          const snackbar = document.getElementById('snackbar');
          snackbar.textContent = message;
          snackbar.style.backgroundColor = backgroundColor;
          snackbar.className = 'show';
        
          setTimeout(function() {
              snackbar.className = snackbar.className.replace('show', '');
          }, 3000);
      }
  
      function validateForm() {
          const addressChecked = document.querySelector('.address-checkbox:checked');
          const paymentMethodInput = document.querySelector('input[name="optradio"]:checked');
        
          if (!addressChecked) {
              showSnackbar('Select an address.', '#ff4444');
              return false;
          }
  
          if (!paymentMethodInput) {
              showSnackbar('Select a payment method.', '#ff4444');
              return false;
          }
  
          const paymentMethod = paymentMethodInput.value; 
          const validPaymentMethods = {
              'Cash on delivery': 'Cash on delivery',
              'Paypal': 'PayPal'
          };
  
          if (!validPaymentMethods[paymentMethod]) {
              showSnackbar('Invalid payment method selected.', '#ff4444');
              return false;
          }
  
          return {
              addressId: addressChecked.value,
              paymentMethod: validPaymentMethods[paymentMethod]
          };
      }
  
      placeOrderBtn.addEventListener('click', async function(event) {
          event.preventDefault();
          
          const formData = validateForm();
          console.log('Form Data:', formData); 
  
          if (formData) {
              try {
                  const response = await fetch('/placeOrder', {
                      method: 'POST',
                      headers: {
                          'Content-Type': 'application/json'
                      },
                      body: JSON.stringify(formData)
                  });
  
                  if (response.ok) {
                      const result = await response.json();
                      showSnackbar('Order placed successfully!', '#00C851');
                      setTimeout(() => window.location.href = result.redirectUrl, 1500);
                  } else {
                      showSnackbar('Failed to place order. Please try again.', '#ff4444');
                  }
              } catch (error) {
                  console.error('Fetch error:', error); 
                  showSnackbar('An error occurred. Please try again.', '#ff4444');
              }
          }
      });
  });
  </script>
  
  

<script src="/static/user/js/jquery.min.js"></script>
<script src="/static/user/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/user/js/popper.min.js"></script>
<script src="/static/user/js/bootstrap.min.js"></script>
<script src="/static/user/js/jquery.easing.1.3.js"></script>
<script src="/static/user/js/jquery.waypoints.min.js"></script>
<script src="/static/user/js/jquery.stellar.min.js"></script>
<script src="/static/user/js/owl.carousel.min.js"></script>
<script src="/static/user/js/jquery.magnific-popup.min.js"></script>
<script src="/static/user/js/aos.js"></script>
<script src="/static/user/js/jquery.animateNumber.min.js"></script>
<script src="/static/user/js/bootstrap-datepicker.js"></script>
<script src="/static/user/js/scrollax.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
<script src="/static/user/js/google-map.js"></script>
<script src="/static/user/js/main.js"></script>
  

<%-include ('./footer.ejs') %>



editProducts page 


<%- include('./adminHeader.ejs') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

<div class="col-12 grid-margin stretch-card">
  <div class="card">
    <div class="card-body">
      <h4 class="card-title">Basic form elements</h4>
      <p class="card-description">Basic form elements</p>
      <form id="productForm" class="forms-sample" method="post" action="/admin/insertEditProducts?pid=<%= product._id %>" enctype="multipart/form-data">

        <div class="form-group">
          <label for="exampleInputName1">Name</label>
          <input type="text" class="form-control" id="exampleInputName1" style="color: rgb(252, 252, 252);width: 85%;" name="name" value="<%= product.name %>" >
          <small class="form-text text-danger" id="errorName"></small>
        </div>
        <div class="form-group">
          <label for="exampleSelectCategory">Category</label>
          <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="category" >
            <option><%= product.category %></option>
            <% for(let i=0;i<categories.length;i++){ %>
            <option><%=categories[i].name%></option>
            <% } %>
          </select>
          <small class="form-text text-danger" id="errorCategory"></small>
        </div>
        <div class="form-group">
          <label for="exampleSelectBrand">Brand</label>
          <select class="form-control" id="exampleSelectBrand" style="color: rgb(252, 252, 252);width: 85%;" name="brand" >
            <option><%= product.brand %></option>
            <% for(let i=0;i<brands.length;i++){ %>
            <option><%=brands[i].name%></option>
            <% } %>
          </select>
          <small class="form-text text-danger" id="errorBrand"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputModel">Model</label>
          <input type="text" class="form-control" id="exampleInputModel" style="color: rgb(252, 252, 252);width: 85%;" name="model" value="<%= product.model %>" >
          <small class="form-text text-danger" id="errorModel"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputMaterial">Material</label>
          <input type="text" class="form-control" id="exampleInputMaterial" style="color: rgb(252, 252, 252);width: 85%;" name="material" value="<%= product.material %>" >
          <small class="form-text text-danger" id="errorMaterial"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputPrice">Price</label>
          <input type="number" class="form-control" id="exampleInputPrice" style="color: rgb(252, 252, 252);width: 85%;" name="price" value="<%= product.price %>" >
          <small class="form-text text-danger" id="errorPrice"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputDiscount">Discount</label>
          <input type="number" class="form-control" id="exampleInputDiscount" style="color: rgb(252, 252, 252);width: 85%;" name="discount" value="<%= product.discount %>" >
          <small class="form-text text-danger" id="errorDiscount"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputStock">Stock</label>
          <input type="number" class="form-control" id="exampleInputStock" style="color: rgb(252, 252, 252);width: 15%;" name="stock" value="<%= product.stock %>" >
          <small class="form-text text-danger" id="errorStock"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputDescription">Description</label>
          <textarea class="form-control" id="exampleInputDescription" name="discription" style="color: rgb(252, 252, 252);width: 85%; height: 80px;" ><%= product.discription %></textarea>
          <small class="form-text text-danger" id="errorDescription"></small>
        </div>

        <h4>Images</h4>
        <div id="imagePreview" style="display: flex; flex-wrap: wrap;">
          <% product.image.forEach((item, index) => { %>
          <div style="position: relative; display: inline-block; margin: 10px;">
            <img src="/static/productImages/<%= item %>" style="width: 100px; height: 100px; background-color: aliceblue;">
            <span onclick="removeExistingImage(<%= index %>)" style="position: absolute; top: 5px; right: 5px; background: rgba(0, 0, 0, 0.5); color: white; border-radius: 50%; padding: 5px; cursor: pointer;">&times;</span>
            <input type="hidden" name="existingImages[]" value="<%= item %>">
          </div>
          <% }) %>
        </div>

        <div style="height: 100px; width: 30%;">
          <label for="ocs-productImage" class="ocs-product-label">Upload Image</label>
          <input type="file" id="ocs-productImage" name="image" class="form-control" multiple accept="image/*" onchange="previewImages()">
        </div>

        <button type="button" class="btn btn-secondary" onclick="openCropModal()">Crop Images</button><br><br>

        <div id="croppedImagesContainer"></div>

        <button type="submit" class="btn btn-primary me-2">Submit</button>
        <button class="btn btn-dark"><a href="/admin/products" style="text-decoration: none;color: rgb(252, 252, 252);">Cancel</a></button>
      </form>
    </div>
  </div>
</div>

<!-- Cropping Modal -->
<div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cropModalLabel">Crop Images</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div id="cropperContainer" style="display: flex; flex-wrap: wrap;"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onclick="cropAllImages()">Crop</button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
  let croppers = [];

  function previewImages() {
    const preview = document.getElementById('imagePreview');
    preview.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const imgContainer = document.createElement('div');
          imgContainer.style.position = 'relative';
          imgContainer.style.margin = '10px';

          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '100px';

          const closeButton = document.createElement('span');
          closeButton.innerHTML = '&times;';
          closeButton.style.position = 'absolute';
          closeButton.style.top = '5px';
          closeButton.style.right = '5px';
          closeButton.style.background = 'rgba(0, 0, 0, 0.5)';
          closeButton.style.color = 'white';
          closeButton.style.borderRadius = '50%';
          closeButton.style.padding = '5px';
          closeButton.style.cursor = 'pointer';
          closeButton.addEventListener('click', () => imgContainer.remove());

          imgContainer.appendChild(img);
          imgContainer.appendChild(closeButton);
          preview.appendChild(imgContainer);
        };

        reader.readAsDataURL(file);
      }
    }
  }

  function removeExistingImage(index) {
    const existingImages = document.getElementsByName('existingImages[]');
    if (existingImages[index]) {
      existingImages[index].value = '';
      const imgContainer = existingImages[index].parentElement;
      imgContainer.style.display = 'none';
    }
  }

  function openCropModal() {
    const cropperContainer = document.getElementById('cropperContainer');
    cropperContainer.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      croppers = [];
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '200px';
          img.style.margin = '10px';
          img.setAttribute('data-index', i);

          cropperContainer.appendChild(img);

          const cropper = new Cropper(img, {
            aspectRatio: 1,
            viewMode: 1,
            autoCropArea: 1,
            responsive: true
          });

          croppers.push(cropper);
        };

        reader.readAsDataURL(file);
      }
    }

    $('#cropModal').modal('show');
  }

  function cropAllImages() {
    const croppedImagesContainer = document.getElementById('croppedImagesContainer');
    croppedImagesContainer.innerHTML = '';

    const promises = [];
    croppers.forEach((cropper, index) => {
      promises.push(new Promise((resolve, reject) => {
        cropper.getCroppedCanvas().toBlob((blob) => {
          const croppedImg = new Image();
          croppedImg.src = URL.createObjectURL(blob);
          croppedImg.style.maxWidth = '100px';
          croppedImg.style.margin = '10px';
          croppedImagesContainer.appendChild(croppedImg);
          resolve({ index, blob });
        });
      }));
    });

    Promise.all(promises).then((results) => {
      results.forEach(({ index, blob }) => {
        const file = document.getElementById('ocs-productImage').files[index];
        const formData = new FormData();
        formData.append('croppedImages[]', blob, file.name);
      });

      $('#cropModal').modal('hide');
    });
  }

  function clearValidationMessages() {
    const validationMessages = document.querySelectorAll('.validation-message');
    validationMessages.forEach((message) => message.innerText = '');
  }

  document.querySelectorAll('#productForm input, #productForm select, #productForm textarea').forEach((input) => {
    input.addEventListener('input', clearValidationMessages);
  });

  function validateForm() {
    let isValid = true;

    const name = document.getElementById('exampleInputName1').value.trim();
    const category = document.getElementById('exampleSelectCategory').value.trim();
    const brand = document.getElementById('exampleSelectBrand').value.trim();
    const model = document.getElementById('exampleInputModel').value.trim();
    const material = document.getElementById('exampleInputMaterial').value.trim();
    const price = document.getElementById('exampleInputPrice').value.trim();
    const discount = document.getElementById('exampleInputDiscount').value.trim();
    const stock = document.getElementById('exampleInputStock').value.trim();
    const description = document.getElementById('exampleInputDescription').value.trim();

    if (!name) {
      document.getElementById('errorName').innerText = 'Name is required';
      isValid = false;
    } else {
      document.getElementById('errorName').innerText = '';
    }

    if (!category) {
      document.getElementById('errorCategory').innerText = 'Category is required';
      isValid = false;
    } else {
      document.getElementById('errorCategory').innerText = '';
    }

    if (!brand) {
      document.getElementById('errorBrand').innerText = 'Brand is required';
      isValid = false;
    } else {
      document.getElementById('errorBrand').innerText = '';
    }

    if (!model) {
      document.getElementById('errorModel').innerText = 'Model is required';
      isValid = false;
    } else {
      document.getElementById('errorModel').innerText = '';
    }

    if (!material) {
      document.getElementById('errorMaterial').innerText = 'Material is required';
      isValid = false;
    } else {
      document.getElementById('errorMaterial').innerText = '';
    }

    if (!price) {
      document.getElementById('errorPrice').innerText = 'Price is required';
      isValid = false;
    } else {
      document.getElementById('errorPrice').innerText = '';
    }

    if (!discount || discount < 100 || discount > 1000) {
      document.getElementById('errorDiscount').innerText = 'Discount is required and discount should be in 100 to 1000';
      isValid = false;
    } else {
      document.getElementById('errorDiscount').innerText = '';
    }

    if (!stock || stock < 0) {
      document.getElementById('errorStock').innerText = 'Stock is required and stock cannot be negative';
      isValid = false;
    } else {
      document.getElementById('errorStock').innerText = '';
    }

    if (!description) {
      document.getElementById('errorDescription').innerText = 'Description is required';
      isValid = false;
    } else {
      document.getElementById('errorDescription').innerText = '';
    }

    return isValid;
  }

  document.getElementById('productForm').addEventListener('submit', function (e) {
    if (!validateForm()) {
      e.preventDefault();
    }
  });
</script>

<%- include('./adminFooter.ejs') %>

edit products 


<%- include('./adminHeader.ejs') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

<div class="col-12 grid-margin stretch-card">
  <div class="card">
    <div class="card-body">
      <h4 class="card-title">Basic form elements</h4>
      <p class="card-description">Basic form elements</p>
      <form id="productForm" class="forms-sample" method="post" action="/admin/insertEditProducts?pid=<%= product._id %>" enctype="multipart/form-data">

        <div class="form-group">
          <label for="exampleInputName1">Name</label>
          <input type="text" class="form-control" id="exampleInputName1" style="color: rgb(252, 252, 252);width: 85%;" name="name" value="<%= product.name %>" >
          <small class="form-text text-danger" id="errorName"></small>
        </div>
        <div class="form-group">
          <label for="exampleSelectCategory">Category</label>
          <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="category" >
            <option><%= product.category %></option>
            <% for(let i=0;i<categories.length;i++){ %>
              <% if(categories[i].name !== product.category ) {%>
            <option><%=categories[i].name%></option>
               <%}%>
            <% } %>
          </select>
          <small class="form-text text-danger" id="errorCategory"></small>
        </div>
        <div class="form-group">
          <label for="exampleSelectBrand">Brand</label>
          <select class="form-control" id="exampleSelectBrand" style="color: rgb(252, 252, 252);width: 85%;" name="brand" >
            <option><%= product.brand %></option>
            <% for(let i=0;i<brands.length;i++){ %>
            <option><%=brands[i].name%></option>
            <% } %>
          </select>
          <small class="form-text text-danger" id="errorBrand"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputModel">Model</label>
          <input type="text" class="form-control" id="exampleInputModel" style="color: rgb(252, 252, 252);width: 85%;" name="model" value="<%= product.model %>" >
          <small class="form-text text-danger" id="errorModel"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputMaterial">Material</label>
          <input type="text" class="form-control" id="exampleInputMaterial" style="color: rgb(252, 252, 252);width: 85%;" name="material" value="<%= product.material %>" >
          <small class="form-text text-danger" id="errorMaterial"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputPrice">Price</label>
          <input type="number" class="form-control" id="exampleInputPrice" style="color: rgb(252, 252, 252);width: 85%;" name="price" value="<%= product.price %>" >
          <small class="form-text text-danger" id="errorPrice"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputDiscount">Discount</label>
          <input type="number" class="form-control" id="exampleInputDiscount" style="color: rgb(252, 252, 252);width: 85%;" name="discount" value="<%= product.discount %>" >
          <small class="form-text text-danger" id="errorDiscount"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputStock">Stock</label>
          <input type="number" class="form-control" id="exampleInputStock" style="color: rgb(252, 252, 252);width: 15%;" name="stock" value="<%= product.stock %>" >
          <small class="form-text text-danger" id="errorStock"></small>
        </div>
        <div class="form-group">
          <label for="exampleInputDescription">Description</label>
          <textarea class="form-control" id="exampleInputDescription" name="discription" style="color: rgb(252, 252, 252);width: 85%; height: 80px;" ><%= product.discription %></textarea>
          <small class="form-text text-danger" id="errorDescription"></small>
        </div>

        <div style="height: 100px; width: 30%;">
          <label for="ocs-productImage" class="ocs-product-label">Upload Image</label>
          <input type="file" id="ocs-productImage" name="image" class="form-control" multiple accept="image/*"
              onchange="previewImages()">
          <small id="imageError" class="form-text text-danger"></small>
      </div>
      <h4>Existing Images</h4>
      <div id="existingImagePreview" style="display: flex; flex-wrap: wrap;">
        <% if (product.image && product.image.length > 0) { %>
          <% product.image.forEach(image => { %>
            <div class="image-container" style="position: relative; margin: 5px;">
              <img src="/static/productImages/<%= image %>" alt="Product Image" style="width: 100px; height: 150px; object-fit: cover;"/>
              <button type="button" class="btn btn-warning btn-sm" onclick="removeImage(this)">X</button>
            </div>
          <% }) %>
        <% } else { %>
          <p>No images available.</p>
        <% } %>
      </div>

      <h4>Added Images</h4>
      <div id="addedImagePreview" style="display: flex; flex-wrap: wrap;"></div><br>

      <button type="button" class="btn btn-secondary" onclick="openCropModal()">Crop Images</button><br><br>

      <div id="croppedImagesContainer"></div>

      <button type="submit" class="btn btn-primary me-2">Submit</button>
      <a href="/admin/products" class="btn btn-dark" style="text-decoration: none; color: white;">Cancel</a>
    </form>
    </div>
  </div>
</div>

<!-- Cropping Modal -->
<div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cropModalLabel">Crop Images</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="cropperContainer" style="display: flex; flex-wrap: wrap;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="cropAllImages()">Crop</button>
            </div>
        </div>
    </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
  let croppers = [];
  let cropperElements = [];

  function openCropModal() {
    const cropperContainer = document.getElementById('cropperContainer');
    cropperContainer.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      croppers = [];
      cropperElements = [];
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '200px';
          img.style.margin = '10px';
          img.setAttribute('data-index', i);

          cropperContainer.appendChild(img);

          const cropper = new Cropper(img, {
            aspectRatio: 1,
            viewMode: 1,
            autoCropArea: 1,
          });

          croppers.push(cropper);
          cropperElements.push(img);
        };

        reader.readAsDataURL(file);
      }
    }

    $('#cropModal').modal('show');
  }

  function cropAllImages() {
    const croppedImagesContainer = document.getElementById('croppedImagesContainer');
    croppedImagesContainer.innerHTML = '';

    croppers.forEach((cropper, index) => {
      const canvas = cropper.getCroppedCanvas();
      const src = canvas.toDataURL();

      const imgContainer = document.createElement('div');
      imgContainer.style.position = 'relative';
      imgContainer.style.margin = '10px';

      const img = document.createElement('img');
      img.src = src;
      img.style.maxWidth = '100px';

      const closeButton = document.createElement('span');
      closeButton.innerHTML = '&times;';
      closeButton.style.position = 'absolute';
      closeButton.style.top = '5px';
      closeButton.style.right = '5px';
      closeButton.style.background = 'rgba(0, 0, 0, 0.5)';
      closeButton.style.color = 'white';
      closeButton.style.borderRadius = '50%';
      closeButton.style.padding = '5px';
      closeButton.style.cursor = 'pointer';
      closeButton.addEventListener('click', () => {
        croppers.splice(index, 1);
        cropperElements.splice(index, 1);
        imgContainer.remove();
      });

      imgContainer.appendChild(img);
      imgContainer.appendChild(closeButton);
      croppedImagesContainer.appendChild(imgContainer);
    });

    $('#cropModal').modal('hide');
  }

  function previewImages() {
    const preview = document.getElementById('addedImagePreview');
    preview.innerHTML = '';
    const files = document.getElementById('ocs-productImage').files;

    if (files) {
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();

        reader.onload = (e) => {
          const imgContainer = document.createElement('div');
          imgContainer.style.position = 'relative';
          imgContainer.style.margin = '10px';

          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '100px';

          const closeButton = document.createElement('span');
          closeButton.innerHTML = '&times;';
          closeButton.style.position = 'absolute';
          closeButton.style.top = '5px';
          closeButton.style.right = '5px';
          closeButton.style.background = 'rgba(0, 0, 0, 0.5)';
          closeButton.style.color = 'white';
          closeButton.style.borderRadius = '50%';
          closeButton.style.padding = '5px';
          closeButton.style.cursor = 'pointer';
          closeButton.addEventListener('click', () => imgContainer.remove());

          imgContainer.appendChild(img);
          imgContainer.appendChild(closeButton);
          preview.appendChild(imgContainer);
        };

        reader.readAsDataURL(file);
      }
    }
  }

  function removeImage(button) {
    const imageContainer = button.parentElement;
    imageContainer.remove();
  }

  function validateForm() {
    let isValid = true;

    const name = document.getElementById('exampleInputName1').value.trim();
    const category = document.getElementById('exampleSelectCategory').value.trim();
    const brand = document.getElementById('exampleSelectBrand').value.trim();
    const model = document.getElementById('exampleInputModel').value.trim();
    const material = document.getElementById('exampleInputMaterial').value.trim();
    const price = document.getElementById('exampleInputPrice').value.trim();
    const discount = document.getElementById('exampleInputDiscount').value.trim();
    const stock = document.getElementById('exampleInputStock').value.trim();
    const description = document.getElementById('exampleInputDescription').value.trim();

    if (!name) {
      document.getElementById('errorName').innerText = 'Name is required';
      isValid = false;
    } else {
      document.getElementById('errorName').innerText = '';
    }

    if (!category) {
      document.getElementById('errorCategory').innerText = 'Category is required';
      isValid = false;
    } else {
      document.getElementById('errorCategory').innerText = '';
    }

    if (!brand) {
      document.getElementById('errorBrand').innerText = 'Brand is required';
      isValid = false;
    } else {
      document.getElementById('errorBrand').innerText = '';
    }

    if (!model) {
      document.getElementById('errorModel').innerText = 'Model is required';
      isValid = false;
    } else {
      document.getElementById('errorModel').innerText = '';
    }

    if (!material) {
      document.getElementById('errorMaterial').innerText = 'Material is required';
      isValid = false;
    } else {
      document.getElementById('errorMaterial').innerText = '';
    }

    if (!price) {
      document.getElementById('errorPrice').innerText = 'Price is required';
      isValid = false;
    } else {
      document.getElementById('errorPrice').innerText = '';
    }

    if (!discount || discount < 100 || discount > 1000) {
      document.getElementById('errorDiscount').innerText = 'Discount is required and discount should be in 100 to 1000';
      isValid = false;
    } else {
      document.getElementById('errorDiscount').innerText = '';
    }

    if (!stock || stock < 0) {
      document.getElementById('errorStock').innerText = 'Stock is required and stock cannot be negative';
      isValid = false;
    } else {
      document.getElementById('errorStock').innerText = '';
    }

    if (!description) {
      document.getElementById('errorDescription').innerText = 'Description is required';
      isValid = false;
    } else {
      document.getElementById('errorDescription').innerText = '';
    }

    return isValid;
  }

  function clearValidationMessages() {
    const validationMessages = document.querySelectorAll('.validation-message');
    validationMessages.forEach((message) => message.innerText = '');
  }

  document.querySelectorAll('#productForm input, #productForm select, #productForm textarea').forEach((input) => {
    input.addEventListener('input', clearValidationMessages);
  });

  document.getElementById('productForm').addEventListener('submit', function (event) {
    if (!validateForm()) {
        event.preventDefault();
    } else {
        event.preventDefault(); 

        const form = event.target;
        const formData = new FormData(form);

        const oldImages = document.querySelectorAll('#addedImagePreview img');
        oldImages.forEach((img, index) => {
            const imgSrc = img.src;
            formData.append('existingImages', imgSrc);
        });

        formData.delete('image');

        croppers.forEach((cropper, index) => {
            const canvas = cropper.getCroppedCanvas();
            canvas.toBlob(blob => {
                formData.append('image', blob, `croppedImage${index}.png`);
            });
        });

        

        setTimeout(() => {
            fetch(form.action, {
                method: form.method,
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    window.location.href = '/admin/products';
                } else {
                    alert('An error occurred while submitting the form');
                }
            })
            .catch(error => {
                console.error(error);
                alert('An error occurred while submitting the form');
            });
        }, 500);
    }
});

</script>



<%- include('./adminFooter.ejs') %>

