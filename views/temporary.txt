<%- include('./adminHeader.ejs') %>

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Striped Table</h4>
            <p class="card-description">Add class <code>.table-striped</code></p>

            <div class="table-responsive">
                <div style="margin-left: 50%;">
                    <button type="button" class="btn btn-outline-danger " data-bs-toggle="modal" data-bs-target="#addBrandModal">Add Brand</button>
                    <button type="button" class="btn btn-outline-danger " > <a href="/admin/deletedBrand" style="text-decoration: none;color: rgb(188, 188, 188);">Restore Brand</a></button>
                </div>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>Brand name</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% for(let i=0;i<brands.length;i++){ %>
                        <tr>
                            <td style="color: aliceblue;"><%= i+1 %></td>
                            <td style="color: aliceblue;"><%= brands[i].name %></td>
                            <td>
                                <button type="button" class="btn " data-bs-toggle="modal" data-bs-target="#editBrandModal" style="width: 80px;background-color: rgb(13, 73, 152);">EDIT</button><br><br>
  
                                <!-- Edit Brand Modal -->
                                <div class="modal fade" id="editBrandModal" tabindex="-1" aria-labelledby="editBrandModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="editBrandModalLabel">Edit Brand</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <form method="post" action="/admin/editBrand">
                                                    <div class="mb-3">
                                                        <label for="brandName" class="form-label">Brand Name</label>
                                                        <input type="text" class="form-control" style="color: aliceblue;" id="brandName" name="brandName" placeholder="Enter brand name" value="<%= brands[i].name %>">
                                                        <input type="hidden" name="brandId" value="<%= brands[i]._id %>">
                                                    </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                <button type="submit" class="btn btn-primary">Save changes</button>
                                            </div>
                                        </form>
                                        </div>
                                    </div>
                                </div>
                                <!-- Edit Brand Modal ends -->

                                <button type="button" class="btn btn-danger delete-btn" data-id="<%= brands[i]._id %>">DELETE</button>
                            </td>
                            <td></td>
                        </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add Brand Modal -->
<div class="modal fade" id="addBrandModal" tabindex="-1" aria-labelledby="addBrandModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBrandModalLabel">Add Brand</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" action="/admin/brand">
                    <div class="mb-3">
                        <label for="brandName" class="form-label">Brand Name</label>
                        <input type="text" class="form-control" style="color: aliceblue;" id="brandName" name="brandName" placeholder="Enter brand name">
                    </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save changes</button>
            </div>
        </form>
        </div>
    </div>
</div>

<script>
    document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', function() {
            const brandId = this.getAttribute('data-id');
            Swal.fire({
                title: 'Are you sure?',
                text: "Are you sure you want to delete this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/delete-brand?id=${brandId}`, {
                        method: 'POST'
                    })
                    .then(response => {
                        if (response.ok) {
                            Swal.fire(
                                'Deleted!',
                                'The brand has been deleted.',
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                'There was an error deleting the brand.',
                                'error'
                            );
                        }
                    })
                    .catch(error => {
                        Swal.fire(
                            'Error!',
                            'There was an error deleting the brand.',
                            'error'
                        );
                    });
                }
            });
        });
    });
</script>

<%- include('./adminFooter.ejs') %>


old admin router 

// const express = require('express');
// const adminController = require('../controllers/adminControllers');
// const adminUserController = require('../controllers/adminUserController');
// const adminCategoryController = require('../controllers/adminCategoryController');
// const adminProductsController = require('../controllers/adminProductsController');
// const adminAuth = require('../middilewares/adminAuth')
// const session = require('express-session');
// const config = require('../config/config');

// const adminRoute = express();

// adminRoute.use(session({
//     secret: config.sessionSecret,
//     saveUninitialized: false,
//     resave: false,
//     cookie: { secure: false }
// }));

// const multer = require('multer');
// const path = require('path');

// adminRoute.use(express.static('public'));

// const storage = multer.diskStorage({
//     destination: (req, file, cb) => {
//         cb(null, path.join(__dirname, '../public/productImages'));
//     },
//     filename: (req, file, cb) => {
//         const name = Date.now() + '-' + file.originalname;
//         cb(null, name);
//     }
// });

// const upload = multer({ storage: storage });

// const bodyParser = require('body-parser');
// adminRoute.use(bodyParser.json());
// adminRoute.use(bodyParser.urlencoded({ extended: true }));

// adminRoute.set('view engine', 'ejs');
// adminRoute.set('views', './views/admin');

// adminRoute.get('/', adminController.adminLogin);
// adminRoute.post('/login', adminController.adminVerifyLogin);
// adminRoute.get('/dashboard',adminAuth.isLogin, adminController.dashboardLoad);
// adminRoute.get('/users',adminUserController.userLoad);
// adminRoute.get('/category',adminCategoryController.categoryLoad);

// adminRoute.post('/category',adminCategoryController.addCategory);
// adminRoute.post('/editCategory',adminCategoryController.editCategory);
// adminRoute.post('/delete-category',adminCategoryController.deleteCategory);
// adminRoute.get('/deletedcategory',adminCategoryController.isdeletedCategory);
// adminRoute.get('/recover',adminCategoryController.recoverCategory)

// //user block unblock..
// adminRoute.post('/block',adminUserController.blockUser);
// adminRoute.post('/unblock',adminUserController.unblockUser);

// //products...

// adminRoute.get('/products',adminProductsController.productsLoad);
// adminRoute.get('/addProducts',adminProductsController.addProductsLoad);
// adminRoute.post('/insertProducts',upload.array('image',3),adminProductsController.insertProducts);


// //delete product


// adminRoute.get('/deleteProducts',adminProductsController.deleteProduct);
// adminRoute.get('/deletedProducts',adminProductsController.deletedProductspage);
// adminRoute.get('/recoverProducts',adminProductsController.recoverProduct);


// //edit Product

// adminRoute.get('/editProducts',adminProductsController.editProductLoad);
// adminRoute.post('/insertEditProducts',upload.array('image',3),adminProductsController.editProduct);



// //brands routes into categories

// adminRoute.get('/brands',adminCategoryController.brandsLoad);
// adminRoute.post('/brands',adminCategoryController.addBrand);
// adminRoute.post('/editBrand',adminCategoryController.editBrand);
// adminRoute.post('/delete-brand',adminCategoryController.deleteBrand);
// adminRoute.get('/deletedBrand',adminCategoryController.deletedBrand);
// adminRoute.get('/brandrecover',adminCategoryController.recoverBrands)




// module.exports = adminRoute;




//real code in the product details 



 <section class="ftco-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 mb-5 ftco-animate">
                <div class="zoom-container" >
                    <img src="/static/productImages/<%= product.image[0] %>" class="img-fluid" alt="Product Image" style="height: 700px;width: 800px;">
                    <div class="zoomed-image" ></div>
                </div>
            </div>
            <div class="col-lg-6 product-details pl-md-5 ftco-animate" style="padding-top: 10%;">
                <h3><%=product.name%></h3>
                    <!-- <div class="rating d-flex">
                            <p class="text-left mr-4">
                                <a href="#" class="mr-2">5.0</a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                                <a href="#"><span class="ion-ios-star-outline"></span></a>
                            </p>
                            <p class="text-left mr-4">
                                <a href="#" class="mr-2" style="color: #000;">100 <span style="color: #bbb;">Rating</span></a>
                            </p>
                            <p class="text-left">
                                <a href="#" class="mr-2" style="color: #000;">500 <span style="color: #bbb;">Sold</span></a>
                            </p>
                        </div> -->
                <p class="price"><span>₹<%=product.price%></span></p>
                <h5><u>Brand</u></h5>
                <p><%=product.brand%></p>
                <h5><u>Details</u></h5>
                <p> <%=product.discription%></p>
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <div class="form-group d-flex">
                  <!-- <div class="select-wrap">
                  <div class="icon"><span class="ion-ios-arrow-down"></span></div>
                  <select name="" id="" class="form-control">
                      <option value="" style="background-color: blue;">Blue</option>
                    <option value="" style="background-color: red;">Red</option>
                    <option value="" style="background-color: #000;">Black</option>
                   
                  </select>
                </div> -->
                <div style="height: 50px;"></div>
                </div>
                        </div>
                        <div class="w-100"></div>
                        <div class="input-group col-md-6 d-flex mb-3" style="width: 35%;">
                 <span class="input-group-btn mr-2">
                    <button type="button" class="quantity-left-minus btn"  data-type="minus" data-field="">
                   <i class="ion-ios-remove"></i>
                    </button>
                    </span>
                 <input type="text" id="quantity" name="quantity" class="form-control input-number" value="1" min="1" max="100">
                 <span class="input-group-btn ml-2">
                    <button type="button" class="quantity-right-plus btn" data-type="plus" data-field="">
                     <i class="ion-ios-add"></i>
                 </button>
                 </span>
              </div>
              <div class="w-100"></div>
              <div class="col-md-12">
                  <% if (product.stock > 0) { %>
                      <p style="color: green;"><span style="color: rgb(0, 0, 0);"><%= product.stock %></span> In stock</p>
                  <% } else { %>
                      <p style="color: red;">Out of stock</p>
                  <% } %>
              </div>
          </div>
          <p><a href="cart.html" class="btn btn-black py-3 px-5">Add to Cart</a></p>
            </div>
        </div>
    </div>
</section>


edit product html


<%- include('./adminHeader.ejs') %>



<div class="col-12 grid-margin stretch-card">
    <div class="card">
      <div class="card-body">
        <h4 class="card-title">Basic form elements</h4>
        <p class="card-description"> Basic form elements </p>
        <form class="forms-sample" method="post" action="/admin/insertEditProducts?pid=<%= product._id %>" enctype="multipart/form-data">
           
          <div class="form-group">
          
            <label for="exampleInputName1">Name</label>
           
            <input type="text" class="form-control" id="exampleInputName1" style="color: rgb(252, 252, 252);width: 85%;" name="name" value="<%= product.name %>" required>
          </div>
          <div class="form-group">
            <label for="exampleSelectCategory">Category</label>
            <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="category" required>
              <option><%= product.category %></option>
              <% for(let i=0;i<categories.length;i++){ %>
              <option ><%=categories[i].name%></option>
              <% } %>
              
             
            </select>
          </div>
          <div class="form-group">
            <label for="exampleSelectCategory">Brands</label>
            <select class="form-control" id="exampleSelectCategory" style="color: rgb(252, 252, 252);width: 85%;" name="brand" required>
              <option><%= product.brand %></option>
              <% for(let i=0;i<brands.length;i++){ %>
              <option ><%=brands[i].name%></option>
              <% } %>
              
             
            </select>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Models</label>
            <input type="text" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="model" value="<%= product.model %>" required>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Material</label>
            <input type="text" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="material" value="<%= product.material %>" required>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Price</label>
            <input type="number" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 85%;" name="price" value="<%= product.price %>" required>
          </div>
          <div class="form-group">
            <label for="exampleInputPassword4">Stock</label>
            <input type="number" class="form-control" id="exampleInputPassword4" style="color: rgb(252, 252, 252);width: 15%;" name="stock" value="<%= product.stock %>"  required>
          </div>
            <div class="form-group">
              <label for="exampleInputPassword4">Discription</label>
              <textarea class="form-control" id="exampleInputPassword4" name="discription" style ="color: rgb(252, 252, 252);width: 85%; height: 80px;"  required><%= product.discription %></textarea>
            </div>
          
            <h4>Existing images</h4>
            <div id="productImage">
              <% product.image.forEach((item, index) => { %>
                <div style="position: relative; display: inline-block; margin: 10px;">
                  <img src="/static/productImages/<%= item %>" style="width: 100px;height: 100px;background-color: aliceblue;">
                  <span onclick="removeExistingImage(<%= index %>)" style="position: absolute; top: 5px; right: 5px; background: rgba(0, 0, 0, 0.5); color: white; border-radius: 50%; padding: 5px; cursor: pointer;">&times;</span>
                  <input type="hidden" name="existingImages[]" value="<%= item %>">
                </div>
              <% }) %>
            </div>
            <div style="height: 100px; width: 30%;">
              <label for="ocs-productImage" class="ocs-product-label">Upload Image</label>
              <input type="file" id="ocs-productImage" name="image" class="form-control" multiple onchange="previewImages()">
            </div>
    
            <h4>Added images</h4>
            <div id="imagePreview" style="display: flex; flex-wrap: wrap;"></div><br>
         
         
          <button type="submit" class="btn btn-primary me-2">Submit</button>
          <button class="btn btn-dark"><a href="/admin/products" style="text-decoration: none;color: rgb(252, 252, 252);">Cancel</a></button>
        </form>
      </div>
    </div>
  </div>

  <script>
    function previewImages() {
      const preview = document.getElementById('imagePreview');
      preview.innerHTML = '';
      const files = document.getElementById('ocs-productImage').files;
      
      if (files) {
        Array.from(files).forEach((file, index) => {
          const reader = new FileReader();
          
          reader.onload = (e) => {
            const imgContainer = document.createElement('div');
            imgContainer.style.position = 'relative';
            imgContainer.style.margin = '10px';
            
            const img = document.createElement('img');
            img.src = e.target.result;
            img.style.maxWidth = '100px';
            
            const closeButton = document.createElement('span');
            closeButton.innerHTML = '&times;';
            closeButton.style.position = 'absolute';
            closeButton.style.top = '5px';
            closeButton.style.right = '5px';
            closeButton.style.background = 'rgba(0, 0, 0, 0.5)';
            closeButton.style.color = 'white';
            closeButton.style.borderRadius = '50%';
            closeButton.style.padding = '5px';
            closeButton.style.cursor = 'pointer';
            closeButton.setAttribute('data-index', index);
            closeButton.addEventListener('click', () => removeImage(index));
            
            imgContainer.appendChild(img);
            imgContainer.appendChild(closeButton);
            preview.appendChild(imgContainer);
          };
          
          reader.readAsDataURL(file);
        });
      }
    }
    
    function removeImage(index) {
      const input = document.getElementById('ocs-productImage');
      const dataTransfer = new DataTransfer();
      const files = Array.from(input.files);
      
      files.splice(index, 1);
      
      files.forEach(file => {
        dataTransfer.items.add(file);
      });
      
      input.files = dataTransfer.files;
      previewImages();
    }
  
    function removeExistingImage(index) {
      const existingImages = document.getElementsByName('existingImages[]');
      if (existingImages[index]) {
        existingImages[index].value = '';
        const imgContainer = existingImages[index].parentElement;
        imgContainer.style.display = 'none';
      }
    }
  </script>
<%- include('./adminFooter.ejs') %>

